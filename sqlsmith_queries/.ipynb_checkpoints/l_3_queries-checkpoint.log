select
  sample_0.ps_supplycost as c0,
  sample_0.ps_availqty as c1,
  case when EXISTS (
      select
          subq_0.c0 as c0,
          sample_0.ps_availqty as c1,
          sample_1.l_returnflag as c2,
          subq_0.c0 as c3,
          sample_1.l_commitdate as c4,
          85 as c5,
          sample_0.ps_suppkey as c6
        from
          public.lineitem as sample_1,
          lateral (select
                sample_0.ps_null as c0
              from
                public.nation as ref_0
              where (cast(null as aclitem) = cast(null as aclitem))
              limit 113) as subq_0
        where EXISTS (
          select
              sample_0.ps_partkey as c0,
              subq_0.c0 as c1,
              sample_1.l_null as c2,
              subq_0.c0 as c3,
              subq_0.c0 as c4
            from
              public.region as sample_2
            where cast(null as circle) = cast(null as circle)
            limit 172)
        limit 61) then sample_0.ps_suppkey else sample_0.ps_suppkey end
     as c2,
  case when EXISTS (
      select
          sample_3.s_null as c0,
          (select o_comment from public.orders limit 1 offset 4)
             as c1
        from
          public.supplier as sample_3
        limit 92) then sample_0.ps_supplycost else sample_0.ps_supplycost end
     as c3
from
  public.partsupp as sample_0
where (sample_0.ps_supplycost is not NULL)
  and (cast(coalesce(cast(coalesce((select l_shipdate from public.lineitem limit 1 offset 56)
          ,
        cast(null as date)) as date),
      case when pg_catalog.pg_my_temp_schema() >= cast(coalesce(cast(null as oid),
            cast(null as oid)) as oid) then pg_catalog.make_date(
          cast(sample_0.ps_availqty as int4),
          cast(sample_0.ps_suppkey as int4),
          cast((select s_suppkey from public.supplier limit 1 offset 4)
             as int4)) else pg_catalog.make_date(
          cast(sample_0.ps_availqty as int4),
          cast(sample_0.ps_suppkey as int4),
          cast((select s_suppkey from public.supplier limit 1 offset 4)
             as int4)) end
        ) as date) > (select pg_catalog.max(l_shipdate) from public.lineitem)
      )
limit 77;
select  
  subq_1.c1 as c0, 
  
    pg_catalog.avg(
      cast(pg_catalog.floor(
        cast(pg_catalog.pg_stat_get_checkpoint_write_time() as float8)) as float8)) over (partition by ref_2.ps_comment order by ref_0.ps_supplycost) as c1, 
  case when ((EXISTS (
          select  
              (select ps_supplycost from public.partsupp limit 1 offset 41)
                 as c0, 
              sample_1.p_brand as c1
            from 
              public.part as sample_1 tablesample system (0.9) ,
              lateral (select  
                    ref_2.ps_null as c0, 
                    55 as c1, 
                    subq_1.c0 as c2
                  from 
                    public.nation as ref_3
                  where cast(null as circle) = cast(null as circle)
                  limit 61) as subq_2
            where ((cast(null as macaddr) >= cast(null as macaddr)) 
                or (((cast(null as circle) >> cast(null as circle)) 
                    and (cast(null as lseg) ?# cast(null as line))) 
                  or (false))) 
              or (true))) 
        and (pg_catalog.timeofday() !~~* cast(null as text))) 
      and (
          pg_catalog.min(
            cast(cast(null as timetz) as timetz)) over (partition by ref_2.ps_suppkey,subq_1.c1 order by ref_0.ps_availqty) > pg_catalog.timezone(
          cast(cast(null as text) as text),
          cast(case when (ref_2.ps_partkey is not NULL) 
              or (true) then cast(null as timetz) else cast(null as timetz) end
             as timetz))) then subq_1.c1 else subq_1.c1 end
     as c2, 
  subq_1.c0 as c3, 
  subq_1.c0 as c4, 
  subq_1.c1 as c5
from 
  public.partsupp as ref_0
      left join (select  
            subq_0.c0 as c0, 
            sample_0.n_nationkey as c1
          from 
            public.nation as sample_0 tablesample system (4.4) ,
            lateral (select  
                  sample_0.n_nationkey as c0, 
                  sample_0.n_regionkey as c1
                from 
                  public.orders as ref_1
                where cast(null as box) <@ cast(null as box)
                limit 152) as subq_0
          where sample_0.n_regionkey is not NULL) as subq_1
      on (ref_0.ps_partkey = subq_1.c0 )
    left join public.partsupp as ref_2
    on (((true <> true) 
          and (cast(null as point) @ cast(null as line))) 
        or ((false) 
          and (cast(null as "time") = cast(null as "time"))))
where true
limit 120;
select  
  ref_0.l_receiptdate as c0, 
  ref_0.l_linestatus as c1
from 
  public.lineitem as ref_0
where ref_0.l_shipdate >= cast(nullif(ref_0.l_receiptdate,
    ref_0.l_shipdate) as date)
limit 37;
select  
  ref_0.c_null as c0, 
  ref_0.c_mktsegment as c1, 
  ref_0.c_nationkey as c2
from 
  public.customer as ref_0
where pg_catalog.pg_export_snapshot() ~~ pg_catalog.pg_export_snapshot()
limit 66;
select  
  subq_0.c6 as c0, 
  case when true then pg_catalog.pg_stat_reset_single_function_counters(
      cast(cast(nullif(cast(nullif(case when cast(null as timetz) <= cast(null as timetz) then cast(null as oid) else cast(null as oid) end
            ,
          cast(null as oid)) as oid),
        
          pg_catalog.max(
            cast(cast(null as oid) as oid)) over (partition by subq_0.c6 order by subq_0.c8,subq_0.c1)) as oid) as oid)) else pg_catalog.pg_stat_reset_single_function_counters(
      cast(cast(nullif(cast(nullif(case when cast(null as timetz) <= cast(null as timetz) then cast(null as oid) else cast(null as oid) end
            ,
          cast(null as oid)) as oid),
        
          pg_catalog.max(
            cast(cast(null as oid) as oid)) over (partition by subq_0.c6 order by subq_0.c8,subq_0.c1)) as oid) as oid)) end
     as c1, 
  subq_0.c3 as c2, 
  case when (pg_catalog.circle(
          cast(cast(null as box) as box)) > pg_catalog.circle(
          cast(cast(null as polygon) as polygon))) 
      and ((cast(null as "timestamp") <> subq_0.c1) 
        and (cast(null as anyrange) -|- cast(null as anyrange))) then 41 else 41 end
     as c3, 
  subq_0.c7 as c4, 
  (select l_quantity from public.lineitem limit 1 offset 5)
     as c5
from 
  (select  
        cast(nullif(ref_0.o_custkey,
          (select pg_catalog.bit_or(p_partkey) from public.part)
            ) as int4) as c0, 
        ref_0.o_orderdate as c1, 
        ref_0.o_orderpriority as c2, 
        ref_0.o_orderstatus as c3, 
        ref_0.o_orderstatus as c4, 
        (select o_orderpriority from public.orders limit 1 offset 5)
           as c5, 
        (select s_suppkey from public.supplier limit 1 offset 2)
           as c6, 
        pg_catalog.bit_length(
          cast(cast(null as "bit") as "bit")) as c7, 
        ref_0.o_null as c8
      from 
        public.orders as ref_0
      where ref_0.o_orderstatus is not NULL) as subq_0
where true
limit 74;
select  
  subq_0.c1 as c0, 
  ref_0.l_orderkey as c1
from 
  public.lineitem as ref_0,
  lateral (select  
        67 as c0, 
        sample_0.p_container as c1, 
        ref_0.l_linestatus as c2, 
        sample_0.p_retailprice as c3, 
        (select o_orderdate from public.orders limit 1 offset 6)
           as c4
      from 
        public.part as sample_0 tablesample system (1.7) 
      where ref_0.l_commitdate is NULL
      limit 71) as subq_0
where ref_0.l_shipinstruct is not NULL;
select  
  subq_0.c0 as c0
from 
  (select  
        cast(coalesce(ref_0.p_comment,
          ref_0.p_comment) as "varchar") as c0
      from 
        public.part as ref_0
      where ref_0.p_brand < ref_0.p_container) as subq_0
where case when cast(null as bytea) >= cast(null as bytea) then (select c_phone from public.customer limit 1 offset 6)
       else (select c_phone from public.customer limit 1 offset 6)
       end
     ~~* pg_catalog.pg_export_snapshot()
limit 150;
select  
  pg_catalog.jsonb_build_array() as c0, 
  pg_catalog.pg_rotate_logfile() as c1, 
  subq_1.c1 as c2
from 
  public.supplier as ref_0
    right join public.lineitem as ref_1
    on (false),
  lateral (select  
        ref_0.s_acctbal as c0, 
        ref_0.s_acctbal as c1, 
        ref_1.l_returnflag as c2
      from 
        (select  
              ref_2.l_receiptdate as c0, 
              ref_2.l_shipmode as c1
            from 
              public.supplier as sample_0 tablesample bernoulli (9.4) 
                right join public.lineitem as ref_2
                  inner join public.partsupp as ref_3
                  on ((ref_3.ps_suppkey is not NULL) 
                      or (false))
                on (ref_2.l_extendedprice is NULL)
            where (sample_0.s_null is NULL) 
              and ((cast(null as "timestamp") >= cast(null as timestamptz)) 
                and ((EXISTS (
                    select  
                        ref_1.l_linestatus as c0, 
                        ref_0.s_address as c1, 
                        sample_0.s_null as c2, 
                        ref_2.l_null as c3
                      from 
                        public.orders as sample_1 tablesample bernoulli (9.6) 
                      where (true) 
                        or (77 is NULL))) 
                  or (false)))
            limit 155) as subq_0
      where (cast(null as box) >> cast(null as box)) 
        and (pg_catalog.current_database() !~* case when (cast(null as circle) ~= cast(null as circle)) 
              or (((cast(null as point) ~= cast(null as point)) 
                  and ((cast(null as lseg) <> cast(null as lseg)) 
                    or (cast(null as uuid) > cast(null as uuid)))) 
                or (cast(null as pg_lsn) >= cast(null as pg_lsn))) then cast(null as text) else cast(null as text) end
            )
      limit 78) as subq_1
where ref_1.l_shipdate is not NULL
limit 50;
select  
  sample_1.o_orderstatus as c0, 
  pg_catalog.pg_stat_get_buf_written_backend() as c1, 
  sample_2.c_acctbal as c2, 
  sample_4.ps_comment as c3
from 
  public.region as sample_0 tablesample bernoulli (3.5) 
        right join public.orders as sample_1 tablesample system (8.6) 
        on ((sample_1.o_orderpriority is NULL) 
            and (cast(null as int8) < sample_1.o_custkey))
      left join public.customer as sample_2 tablesample system (8) 
        inner join public.part as sample_3 tablesample system (3) 
          inner join public.partsupp as sample_4 tablesample system (7.1) 
            left join public.partsupp as ref_0
              inner join public.supplier as ref_1
              on (true)
            on (cast(null as "timestamp") <> (select pg_catalog.min(o_orderdate) from public.orders)
                  )
          on (false)
        on (cast(null as aclitem) = cast(null as aclitem))
      on (sample_3.p_comment is NULL)
    left join public.region as sample_5 tablesample system (1.7) 
      inner join (select  
            ref_2.r_name as c0, 
            ref_2.r_comment as c1, 
            ref_2.r_null as c2, 
            ref_2.r_null as c3
          from 
            public.region as ref_2
          where (cast(null as text) @@ cast(null as tsquery)) 
            and (cast(null as timestamptz) <= cast(null as timestamptz))
          limit 107) as subq_0
      on (cast(null as date) <> (select pg_catalog.max(o_orderdate) from public.orders)
            )
    on (true)
where (cast(coalesce(case when cast(null as text) ~~ pg_catalog.pg_get_function_arguments(
            cast(cast(null as oid) as oid)) then cast(null as tsquery) else cast(null as tsquery) end
        ,
      case when cast(null as "char") >= cast(null as "char") then case when (EXISTS (
              select  
                  sample_4.ps_partkey as c0
                from 
                  public.customer as ref_3
                where false < false)) 
            and (((cast(null as path) @> cast(null as point)) 
                or (true)) 
              and ((false) 
                or (true))) then case when (false) 
              and (cast(null as jsonb) ? cast(null as text)) then cast(null as tsquery) else cast(null as tsquery) end
             else case when (false) 
              and (cast(null as jsonb) ? cast(null as text)) then cast(null as tsquery) else cast(null as tsquery) end
             end
           else case when (EXISTS (
              select  
                  sample_4.ps_partkey as c0
                from 
                  public.customer as ref_3
                where false < false)) 
            and (((cast(null as path) @> cast(null as point)) 
                or (true)) 
              and ((false) 
                or (true))) then case when (false) 
              and (cast(null as jsonb) ? cast(null as text)) then cast(null as tsquery) else cast(null as tsquery) end
             else case when (false) 
              and (cast(null as jsonb) ? cast(null as text)) then cast(null as tsquery) else cast(null as tsquery) end
             end
           end
        ) as tsquery) @@@ cast(coalesce(cast(null as tsvector),
      pg_catalog.to_tsvector(
        cast(case when cast(null as circle) ~ cast(null as circle) then pg_catalog.current_query() else pg_catalog.current_query() end
           as text))) as tsvector)) 
  or (pg_catalog.xidin(
      cast(cast(null as cstring) as cstring)) = pg_catalog.bpchartypmodin(
      cast(cast(nullif(case when (cast(null as _aclitem) ~ cast(null as aclitem)) 
            and ((sample_1.o_custkey is NULL) 
              and (cast(null as point) @ cast(null as polygon))) then cast(null as _cstring) else cast(null as _cstring) end
          ,
        case when sample_4.ps_supplycost < sample_4.ps_supplycost then case when EXISTS (
              select  
                  87 as c0, 
                  subq_0.c2 as c1, 
                  sample_2.c_mktsegment as c2, 
                  sample_4.ps_availqty as c3, 
                  subq_0.c3 as c4, 
                  subq_0.c1 as c5, 
                  sample_5.r_comment as c6
                from 
                  public.supplier as sample_6 tablesample system (10) 
                where EXISTS (
                  select  
                      sample_0.r_null as c0
                    from 
                      public.orders as sample_7 tablesample bernoulli (5.8) 
                    where cast(null as polygon) ~ cast(null as polygon)
                    limit 86)
                limit 106) then cast(null as _cstring) else cast(null as _cstring) end
             else case when EXISTS (
              select  
                  87 as c0, 
                  subq_0.c2 as c1, 
                  sample_2.c_mktsegment as c2, 
                  sample_4.ps_availqty as c3, 
                  subq_0.c3 as c4, 
                  subq_0.c1 as c5, 
                  sample_5.r_comment as c6
                from 
                  public.supplier as sample_6 tablesample system (10) 
                where EXISTS (
                  select  
                      sample_0.r_null as c0
                    from 
                      public.orders as sample_7 tablesample bernoulli (5.8) 
                    where cast(null as polygon) ~ cast(null as polygon)
                    limit 86)
                limit 106) then cast(null as _cstring) else cast(null as _cstring) end
             end
          ) as _cstring) as _cstring)))
limit 162;
update public.orders set 
  o_orderkey = cast(coalesce(public.orders.o_shippriority,
    public.orders.o_custkey) as int4), 
  o_totalprice = public.orders.o_totalprice, 
  o_orderdate = public.orders.o_orderdate, 
  o_shippriority = public.orders.o_orderkey, 
  o_comment = case when case when case when cast(null as circle) && cast(null as circle) then cast(null as money) else cast(null as money) end
             > cast(null as money) then cast(null as macaddr) else cast(null as macaddr) end
         >= cast(coalesce(cast(null as macaddr),
        cast(null as macaddr)) as macaddr) then (select s_address from public.supplier limit 1 offset 1)
       else (select s_address from public.supplier limit 1 offset 1)
       end
    , 
  o_null = public.orders.o_null
returning 
  public.orders.o_clerk as c0, 
  public.orders.o_comment as c1, 
  public.orders.o_custkey as c2, 
  (select o_orderstatus from public.orders limit 1 offset 1)
     as c3;
select  
  pg_catalog.json_build_object() as c0, 
  ref_0.l_comment as c1, 
  sample_0.n_nationkey as c2
from 
  public.lineitem as ref_0
    inner join public.nation as sample_0 tablesample system (4.2) 
    on (sample_0.n_nationkey is not NULL)
where case when ref_0.l_linenumber >= ref_0.l_linenumber then pg_catalog.abstime(
      cast(cast(null as timestamptz) as timestamptz)) else pg_catalog.abstime(
      cast(cast(null as timestamptz) as timestamptz)) end
     > pg_catalog.timenow();
select  
  subq_1.c7 as c0
from 
  (select  
        pg_catalog.pg_stat_get_bgwriter_maxwritten_clean() as c0, 
        ref_0.s_comment as c1, 
        subq_0.c0 as c2, 
        sample_0.o_null as c3, 
        ref_1.o_null as c4, 
        sample_0.o_orderkey as c5, 
        (select n_nationkey from public.nation limit 1 offset 3)
           as c6, 
        case when cast(null as text) > cast(null as text) then (select l_orderkey from public.lineitem limit 1 offset 2)
             else (select l_orderkey from public.lineitem limit 1 offset 2)
             end
           as c7
      from 
        public.supplier as ref_0
            right join public.orders as sample_0 tablesample bernoulli (8.3) 
              left join public.orders as ref_1
                inner join public.region as sample_1 tablesample system (3.4) 
                on (cast(null as tinterval) #= cast(null as reltime))
              on (sample_0.o_orderdate = ref_1.o_orderdate )
            on (sample_0.o_orderdate <> sample_0.o_orderdate)
          right join (select  
                sample_2.ps_availqty as c0, 
                sample_2.ps_comment as c1, 
                sample_2.ps_supplycost as c2
              from 
                public.partsupp as sample_2 tablesample system (2.4) 
              where sample_2.ps_availqty is not NULL) as subq_0
          on (subq_0.c0 is not NULL)
      where (select l_commitdate from public.lineitem limit 1 offset 3)
           is not NULL) as subq_1
where subq_1.c5 is NULL
limit 117;
update public.part set 
  p_name = public.part.p_comment, 
  p_type = public.part.p_comment, 
  p_retailprice = public.part.p_retailprice
returning 
  public.part.p_type as c0, 
  public.part.p_name as c1, 
  public.part.p_size as c2, 
  public.part.p_name as c3, 
  public.part.p_size as c4;
select  
  subq_0.c1 as c0
from 
  (select  
        sample_0.ps_null as c0, 
        sample_0.ps_comment as c1
      from 
        public.partsupp as sample_0 tablesample bernoulli (0.3) 
      where case when cast(null as int8) > cast(null as int2) then case when (true) 
              or (cast(null as tinterval) #<= cast(null as reltime)) then cast(null as timestamptz) else cast(null as timestamptz) end
             else case when (true) 
              or (cast(null as tinterval) #<= cast(null as reltime)) then cast(null as timestamptz) else cast(null as timestamptz) end
             end
           <= pg_catalog.pg_stat_get_snapshot_timestamp()
      limit 97) as subq_0
where (select pg_catalog.min(l_orderkey) from public.lineitem)
     < pg_catalog.pg_stat_get_buf_written_backend()
limit 173;
select  
  pg_catalog.json_build_object() as c0, 
  case when cast(coalesce(case when ref_0.l_orderkey >= ref_0.l_suppkey then pg_catalog.tsvector_concat(
            cast(cast(null as tsvector) as tsvector),
            cast(cast(null as tsvector) as tsvector)) else pg_catalog.tsvector_concat(
            cast(cast(null as tsvector) as tsvector),
            cast(cast(null as tsvector) as tsvector)) end
          ,
        case when cast(null as "timestamp") <= ref_0.l_shipdate then cast(null as tsvector) else cast(null as tsvector) end
          ) as tsvector) >= case when (ref_0.l_receiptdate <> ref_0.l_commitdate) 
          or (true) then cast(null as tsvector) else cast(null as tsvector) end
         then ref_0.l_shipmode else ref_0.l_shipmode end
     as c1, 
  ref_0.l_returnflag as c2, 
  ref_0.l_null as c3, 
  ref_0.l_null as c4
from 
  public.lineitem as ref_0
where cast(nullif(cast(nullif(case when (ref_0.l_orderkey >= cast(null as int2)) 
          or ((ref_0.l_linestatus is not NULL) 
            or (EXISTS (
              select distinct 
                  ref_0.l_commitdate as c0, 
                  sample_0.l_partkey as c1, 
                  ref_0.l_extendedprice as c2, 
                  sample_0.l_receiptdate as c3
                from 
                  public.lineitem as sample_0 tablesample bernoulli (4.7) 
                where cast(null as timestamptz) > cast(null as "timestamp")
                limit 63))) then cast(null as "timestamp") else cast(null as "timestamp") end
        ,
      cast(null as "timestamp")) as "timestamp"),
    pg_catalog.timestamp(
      cast(pg_catalog.now() as timestamptz))) as "timestamp") > pg_catalog.pg_backup_start_time()
limit 80;
select  
  ref_0.l_returnflag as c0
from 
  public.lineitem as ref_0
where pg_catalog.pg_backend_pid() > pg_catalog.pg_stat_get_db_deadlocks(
    cast(pg_catalog.lo_import(
      cast(pg_catalog.current_query() as text),
      cast(cast(nullif(pg_catalog.pg_stat_get_backend_userid(
          cast((select pg_catalog.bit_or(o_orderkey) from public.orders)
             as int4)),
        cast(nullif(cast(null as oid),
          cast(null as oid)) as oid)) as oid) as oid)) as oid))
limit 47;
select  
  ref_0.o_comment as c0, 
  ref_0.o_comment as c1, 
  ref_0.o_orderkey as c2, 
  ref_0.o_totalprice as c3, 
  ref_0.o_orderpriority as c4, 
  ref_0.o_orderdate as c5, 
  pg_catalog.inet_client_port() as c6, 
  
    pg_catalog.max(
      cast(case when true then pg_catalog.pg_my_temp_schema() else pg_catalog.pg_my_temp_schema() end
         as oid)) over (partition by ref_0.o_orderkey order by ref_0.o_comment) as c7, 
  ref_0.o_clerk as c8, 
  ref_0.o_shippriority as c9, 
  ref_0.o_orderstatus as c10, 
  ref_0.o_clerk as c11, 
  ref_0.o_comment as c12
from 
  public.orders as ref_0
where pg_catalog.current_user() >= cast(coalesce(case when cast(nullif(case when ref_0.o_clerk is NULL then cast(null as record) else cast(null as record) end
            ,
          case when false then cast(null as record) else cast(null as record) end
            ) as record) <> cast(null as record) then case when false then cast(coalesce(cast(coalesce(cast(null as name),
            cast(null as name)) as name),
          pg_catalog.getpgusername()) as name) else cast(coalesce(cast(coalesce(cast(null as name),
            cast(null as name)) as name),
          pg_catalog.getpgusername()) as name) end
         else case when false then cast(coalesce(cast(coalesce(cast(null as name),
            cast(null as name)) as name),
          pg_catalog.getpgusername()) as name) else cast(coalesce(cast(coalesce(cast(null as name),
            cast(null as name)) as name),
          pg_catalog.getpgusername()) as name) end
         end
      ,
    pg_catalog.session_user()) as name);
select  
  subq_1.c0 as c0, 
  case when (true) 
      or (EXISTS (
        select  
            subq_1.c0 as c0
          from 
            public.partsupp as ref_3
          where ref_3.ps_null is not NULL
          limit 136)) then pg_catalog.transaction_timestamp() else pg_catalog.transaction_timestamp() end
     as c1, 
  subq_1.c0 as c2
from 
  (select  
        ref_0.o_totalprice as c0
      from 
        public.orders as ref_0
          left join public.lineitem as ref_1
          on (cast(null as point) <@ cast(null as polygon)),
        lateral (select  
              ref_1.l_extendedprice as c0, 
              ref_1.l_returnflag as c1, 
              ref_0.o_orderkey as c2, 
              ref_2.ps_supplycost as c3
            from 
              public.partsupp as ref_2
            where ref_1.l_partkey is not NULL
            limit 169) as subq_0
      where (true) 
        and ((subq_0.c0 is NULL) 
          or ((ref_1.l_commitdate is NULL) 
            and (subq_0.c1 is NULL)))
      limit 99) as subq_1
where cast(nullif(case when case when true then cast(null as text) else cast(null as text) end
           ~~* pg_catalog.version() then case when (cast(null as money) = cast(null as money)) 
          and (25 is not NULL) then case when ((false) 
              and (EXISTS (
                select  
                    subq_1.c0 as c0
                  from 
                    public.region as sample_0 tablesample system (2.9) 
                  where (EXISTS (
                      select  
                          (select ps_partkey from public.partsupp limit 1 offset 4)
                             as c0
                        from 
                          public.partsupp as sample_1 tablesample system (9.2) 
                        where true
                        limit 86)) 
                    and (false)))) 
            and (subq_1.c0 is NULL) then cast(null as tsquery) else cast(null as tsquery) end
           else case when ((false) 
              and (EXISTS (
                select  
                    subq_1.c0 as c0
                  from 
                    public.region as sample_0 tablesample system (2.9) 
                  where (EXISTS (
                      select  
                          (select ps_partkey from public.partsupp limit 1 offset 4)
                             as c0
                        from 
                          public.partsupp as sample_1 tablesample system (9.2) 
                        where true
                        limit 86)) 
                    and (false)))) 
            and (subq_1.c0 is NULL) then cast(null as tsquery) else cast(null as tsquery) end
           end
         else case when (cast(null as money) = cast(null as money)) 
          and (25 is not NULL) then case when ((false) 
              and (EXISTS (
                select  
                    subq_1.c0 as c0
                  from 
                    public.region as sample_0 tablesample system (2.9) 
                  where (EXISTS (
                      select  
                          (select ps_partkey from public.partsupp limit 1 offset 4)
                             as c0
                        from 
                          public.partsupp as sample_1 tablesample system (9.2) 
                        where true
                        limit 86)) 
                    and (false)))) 
            and (subq_1.c0 is NULL) then cast(null as tsquery) else cast(null as tsquery) end
           else case when ((false) 
              and (EXISTS (
                select  
                    subq_1.c0 as c0
                  from 
                    public.region as sample_0 tablesample system (2.9) 
                  where (EXISTS (
                      select  
                          (select ps_partkey from public.partsupp limit 1 offset 4)
                             as c0
                        from 
                          public.partsupp as sample_1 tablesample system (9.2) 
                        where true
                        limit 86)) 
                    and (false)))) 
            and (subq_1.c0 is NULL) then cast(null as tsquery) else cast(null as tsquery) end
           end
         end
      ,
    case when cast(null as anyarray) = case when cast(null as name) > cast(null as name) then case when cast(null as tinterval) <> cast(null as tinterval) then cast(null as anyarray) else cast(null as anyarray) end
             else case when cast(null as tinterval) <> cast(null as tinterval) then cast(null as anyarray) else cast(null as anyarray) end
             end
           then cast(nullif(case when (((((cast(null as record) = cast(null as record)) 
                    or ((false) 
                      or (EXISTS (
                        select  
                            subq_1.c0 as c0, 
                            sample_2.ps_availqty as c1, 
                            subq_1.c0 as c2, 
                            (select n_comment from public.nation limit 1 offset 5)
                               as c3
                          from 
                            public.partsupp as sample_2 tablesample bernoulli (2.7) 
                          where true
                          limit 111)))) 
                  or (cast(null as uuid) < cast(null as uuid))) 
                or (((cast(null as anyrange) >= cast(null as anyrange)) 
                    and (EXISTS (
                      select  
                          ref_4.p_name as c0, 
                          ref_4.p_type as c1, 
                          ref_4.p_partkey as c2, 
                          ref_4.p_retailprice as c3, 
                          (select o_totalprice from public.orders limit 1 offset 4)
                             as c4
                        from 
                          public.part as ref_4
                        where ref_4.p_type is NULL
                        limit 48))) 
                  and (subq_1.c0 is not NULL))) 
              and (subq_1.c0 is NULL)) 
            or ((select pg_catalog.jsonb_agg(s_suppkey) from public.supplier)
                 ?& cast(null as _text)) then cast(null as tsquery) else cast(null as tsquery) end
          ,
        pg_catalog.tsquery_and(
          cast(cast(null as tsquery) as tsquery),
          cast(pg_catalog.tsqueryin(
            cast(cast(null as cstring) as cstring)) as tsquery))) as tsquery) else cast(nullif(case when (((((cast(null as record) = cast(null as record)) 
                    or ((false) 
                      or (EXISTS (
                        select  
                            subq_1.c0 as c0, 
                            sample_2.ps_availqty as c1, 
                            subq_1.c0 as c2, 
                            (select n_comment from public.nation limit 1 offset 5)
                               as c3
                          from 
                            public.partsupp as sample_2 tablesample bernoulli (2.7) 
                          where true
                          limit 111)))) 
                  or (cast(null as uuid) < cast(null as uuid))) 
                or (((cast(null as anyrange) >= cast(null as anyrange)) 
                    and (EXISTS (
                      select  
                          ref_4.p_name as c0, 
                          ref_4.p_type as c1, 
                          ref_4.p_partkey as c2, 
                          ref_4.p_retailprice as c3, 
                          (select o_totalprice from public.orders limit 1 offset 4)
                             as c4
                        from 
                          public.part as ref_4
                        where ref_4.p_type is NULL
                        limit 48))) 
                  and (subq_1.c0 is not NULL))) 
              and (subq_1.c0 is NULL)) 
            or ((select pg_catalog.jsonb_agg(s_suppkey) from public.supplier)
                 ?& cast(null as _text)) then cast(null as tsquery) else cast(null as tsquery) end
          ,
        pg_catalog.tsquery_and(
          cast(cast(null as tsquery) as tsquery),
          cast(pg_catalog.tsqueryin(
            cast(cast(null as cstring) as cstring)) as tsquery))) as tsquery) end
      ) as tsquery) > case when (EXISTS (
        select  
            sample_3.o_clerk as c0
          from 
            public.orders as sample_3 tablesample system (9.4) 
          where ((cast(null as inet) <> cast(null as inet)) 
              and ((cast(null as int8) <> cast(null as int2)) 
                and (cast(null as "timestamp") <> cast(null as "timestamp")))) 
            or (cast(null as tinterval) <> cast(null as tinterval))
          limit 74)) 
      and (85 is not NULL) then cast(null as tsquery) else cast(null as tsquery) end
    ;
update public.orders set 
  o_clerk = public.orders.o_orderpriority, 
  o_comment = public.orders.o_comment
returning 
  public.orders.o_orderdate as c0, 
  public.orders.o_shippriority as c1, 
  case when case when public.orders.o_orderdate is not NULL then case when public.orders.o_orderkey is not NULL then case when cast(null as record) > cast(null as record) then cast(null as bytea) else cast(null as bytea) end
             else case when cast(null as record) > cast(null as record) then cast(null as bytea) else cast(null as bytea) end
             end
           else case when public.orders.o_orderkey is not NULL then case when cast(null as record) > cast(null as record) then cast(null as bytea) else cast(null as bytea) end
             else case when cast(null as record) > cast(null as record) then cast(null as bytea) else cast(null as bytea) end
             end
           end
         = cast(null as bytea) then public.orders.o_custkey else public.orders.o_custkey end
     as c2, 
  case when (EXISTS (
        select  
            ref_0.o_custkey as c0, 
            ref_0.o_totalprice as c1, 
            ref_0.o_null as c2, 
            ref_0.o_custkey as c3, 
            public.orders.o_orderpriority as c4
          from 
            public.orders as ref_0
          where cast(null as timestamptz) <= cast(null as timestamptz)
          limit 17)) 
      or ((case when ((select c_custkey from public.customer limit 1 offset 3)
                   = cast(null as int8)) 
              and (public.orders.o_orderdate is not NULL) then cast(null as circle) else cast(null as circle) end
             <= cast(null as circle)) 
        and (cast(null as anyarray) @> case when cast(null as circle) >> cast(null as circle) then cast(null as anyarray) else cast(null as anyarray) end
            )) then public.orders.o_comment else public.orders.o_comment end
     as c3, 
  cast(nullif(public.orders.o_orderpriority,
    public.orders.o_clerk) as bpchar) as c4, 
  pg_catalog.pg_stat_clear_snapshot() as c5, 
  case when cast(nullif(cast(null as oidvector),
        cast(nullif(cast(null as oidvector),
          pg_catalog.oidvectorin(
            cast(cast(null as cstring) as cstring))) as oidvector)) as oidvector) > cast(nullif(case when true then cast(null as oidvector) else cast(null as oidvector) end
          ,
        case when EXISTS (
            select  
                public.orders.o_shippriority as c0, 
                sample_0.r_null as c1, 
                sample_0.r_name as c2, 
                sample_0.r_comment as c3, 
                public.orders.o_comment as c4
              from 
                public.region as sample_0 tablesample bernoulli (9.7) 
              where EXISTS (
                select  
                    public.orders.o_comment as c0, 
                    ref_1.s_suppkey as c1, 
                    ref_1.s_null as c2, 
                    sample_0.r_comment as c3, 
                    sample_0.r_regionkey as c4, 
                    ref_1.s_comment as c5, 
                    public.orders.o_orderdate as c6, 
                    ref_1.s_null as c7, 
                    public.orders.o_orderpriority as c8, 
                    public.orders.o_orderstatus as c9, 
                    public.orders.o_clerk as c10, 
                    ref_1.s_nationkey as c11, 
                    ref_1.s_null as c12, 
                    sample_0.r_name as c13, 
                    (select s_acctbal from public.supplier limit 1 offset 82)
                       as c14, 
                    public.orders.o_orderstatus as c15, 
                    ref_1.s_null as c16
                  from 
                    public.supplier as ref_1
                  where (((true) 
                        or (cast(null as timestamptz) > public.orders.o_orderdate)) 
                      and (cast(null as float8) > cast(null as float8))) 
                    or (cast(null as tid) < cast(null as tid))
                  limit 137)
              limit 39) then cast(null as oidvector) else cast(null as oidvector) end
          ) as oidvector) then case when public.orders.o_orderpriority is NULL then cast(nullif(public.orders.o_orderdate,
        public.orders.o_orderdate) as date) else cast(nullif(public.orders.o_orderdate,
        public.orders.o_orderdate) as date) end
       else case when public.orders.o_orderpriority is NULL then cast(nullif(public.orders.o_orderdate,
        public.orders.o_orderdate) as date) else cast(nullif(public.orders.o_orderdate,
        public.orders.o_orderdate) as date) end
       end
     as c6, 
  public.orders.o_orderdate as c7, 
  public.orders.o_comment as c8, 
  public.orders.o_orderstatus as c9;
select  
  ref_0.p_partkey as c0, 
  case when case when cast(null as "interval") >= pg_catalog.interval_um(
            cast(cast(null as "interval") as "interval")) then cast(null as point) else cast(null as point) end
         <@ case when cast(null as oidvector) >= case when cast(null as "time") <> cast(null as "time") then cast(null as oidvector) else cast(null as oidvector) end
             then pg_catalog.path_sub_pt(
          cast(pg_catalog.path_sub_pt(
            cast(cast(null as path) as path),
            cast(cast(null as point) as point)) as path),
          cast(case when cast(null as circle) |&> cast(null as circle) then cast(null as point) else cast(null as point) end
             as point)) else pg_catalog.path_sub_pt(
          cast(pg_catalog.path_sub_pt(
            cast(cast(null as path) as path),
            cast(cast(null as point) as point)) as path),
          cast(case when cast(null as circle) |&> cast(null as circle) then cast(null as point) else cast(null as point) end
             as point)) end
         then ref_0.p_retailprice else ref_0.p_retailprice end
     as c1
from 
  public.part as ref_0
where case when (pg_catalog.session_user() ~~* cast(null as text)) 
      or (pg_catalog.version() ~ pg_catalog.pg_export_snapshot()) then pg_catalog.box_add(
      cast(pg_catalog.box_in(
        cast(cast(null as cstring) as cstring)) as box),
      cast(case when ref_0.p_retailprice < ref_0.p_retailprice then cast(null as point) else cast(null as point) end
         as point)) else pg_catalog.box_add(
      cast(pg_catalog.box_in(
        cast(cast(null as cstring) as cstring)) as box),
      cast(case when ref_0.p_retailprice < ref_0.p_retailprice then cast(null as point) else cast(null as point) end
         as point)) end
     <<| case when (((cast(null as tid) > cast(null as tid)) 
          or ((select o_orderdate from public.orders limit 1 offset 1)
               >= cast(null as date))) 
        or (true)) 
      and (case when ref_0.p_comment is not NULL then cast(null as anyrange) else cast(null as anyrange) end
           && case when (cast(null as "time") > cast(null as "time")) 
            and (ref_0.p_container <> ref_0.p_mfgr) then case when cast(null as name) !~* cast(null as text) then cast(null as anyrange) else cast(null as anyrange) end
             else case when cast(null as name) !~* cast(null as text) then cast(null as anyrange) else cast(null as anyrange) end
             end
          ) then cast(null as box) else cast(null as box) end
    
limit 123;
select  
  ref_0.n_regionkey as c0, 
  ref_0.n_null as c1, 
  case when cast(nullif(
          pg_catalog.stddev_samp(
            cast(cast(null as float8) as float8)) over (partition by ref_0.n_null order by ref_0.n_comment),
        pg_catalog.pi()) as float8) = 
        pg_catalog.max(
          cast(cast(coalesce(cast(null as float4),
            cast(null as float4)) as float4) as float4)) over (partition by ref_0.n_comment,ref_0.n_name order by ref_0.n_null) then ref_0.n_regionkey else ref_0.n_regionkey end
     as c2
from 
  public.nation as ref_0
where pg_catalog.clock_timestamp() <= pg_catalog.date_larger(
    cast((select pg_catalog.min(l_shipdate) from public.lineitem)
       as date),
    cast(case when (select pg_catalog.jsonb_agg(o_orderkey) from public.orders)
           <= pg_catalog.jsonb_build_object() then pg_catalog.date(
        cast(cast(null as abstime) as abstime)) else pg_catalog.date(
        cast(cast(null as abstime) as abstime)) end
       as date))
limit 124;
select  
  16 as c0, 
  (select o_null from public.orders limit 1 offset 27)
     as c1, 
  subq_1.c0 as c2, 
  97 as c3
from 
  (select distinct 
        subq_0.c2 as c0, 
        sample_0.r_comment as c1, 
        ref_2.r_null as c2
      from 
        public.region as sample_0 tablesample bernoulli (8.2) 
            inner join public.orders as ref_0
            on (cast(null as int2) <= cast(null as int2))
          right join public.orders as ref_1
            inner join public.region as ref_2
            on (ref_1.o_clerk = ref_2.r_name )
          on ((cast(null as timetz) < cast(null as timetz)) 
              and (cast(null as point) ?- cast(null as point))),
        lateral (select  
              ref_2.r_comment as c0, 
              ref_3.s_nationkey as c1, 
              sample_0.r_name as c2, 
              (select r_regionkey from public.region limit 1 offset 1)
                 as c3
            from 
              public.supplier as ref_3
            where false
            limit 105) as subq_0
      where pg_catalog.float4um(
          cast(pg_catalog.ts_rank_cd(
            cast(cast(null as _float4) as _float4),
            cast(cast(null as tsvector) as tsvector),
            cast(cast(null as tsquery) as tsquery)) as float4)) is NULL
      limit 160) as subq_1
where subq_1.c2 is not NULL
limit 94;
select  
  subq_1.c4 as c0, 
  pg_catalog.pg_my_temp_schema() as c1, 
  37 as c2, 
  case when case when pg_catalog.now() <= cast(null as "timestamp") then pg_catalog.tinterval(
          cast(cast(null as abstime) as abstime),
          cast(case when (select pg_catalog.max(l_shipdate) from public.lineitem)
                 >= cast(null as "timestamp") then cast(null as abstime) else cast(null as abstime) end
             as abstime)) else pg_catalog.tinterval(
          cast(cast(null as abstime) as abstime),
          cast(case when (select pg_catalog.max(l_shipdate) from public.lineitem)
                 >= cast(null as "timestamp") then cast(null as abstime) else cast(null as abstime) end
             as abstime)) end
         > case when subq_1.c5 is not NULL then cast(coalesce(cast(null as tinterval),
          case when cast(null as "timestamp") <> cast(null as timestamptz) then cast(null as tinterval) else cast(null as tinterval) end
            ) as tinterval) else cast(coalesce(cast(null as tinterval),
          case when cast(null as "timestamp") <> cast(null as timestamptz) then cast(null as tinterval) else cast(null as tinterval) end
            ) as tinterval) end
         then 37 else 37 end
     as c3, 
  subq_1.c7 as c4
from 
  (select  
        ref_0.l_returnflag as c0, 
        subq_0.c7 as c1, 
        
          pg_catalog.bool_and(
            cast(false as bool)) over (partition by subq_0.c3 order by subq_0.c7) as c2, 
        case when cast(null as inet) >>= cast(null as inet) then subq_0.c4 else subq_0.c4 end
           as c3, 
        30 as c4, 
        ref_0.l_quantity as c5, 
        ref_0.l_shipmode as c6, 
        ref_0.l_discount as c7
      from 
        public.lineitem as ref_0,
        lateral (select  
              ref_1.l_null as c0, 
              (select r_comment from public.region limit 1 offset 6)
                 as c1, 
              ref_2.l_extendedprice as c2, 
              sample_0.n_null as c3, 
              ref_2.l_comment as c4, 
              ref_0.l_quantity as c5, 
              ref_0.l_discount as c6, 
              ref_0.l_returnflag as c7
            from 
              public.nation as sample_0 tablesample bernoulli (0.6) 
                left join public.lineitem as ref_1
                  right join public.lineitem as ref_2
                  on (cast(null as int2) > 38)
                on (ref_0.l_orderkey is not NULL)
            where (cast(null as abstime) >= cast(null as abstime)) 
              and (cast(null as float4) < cast(null as float4))
            limit 45) as subq_0
      where subq_0.c0 is NULL
      limit 102) as subq_1
where subq_1.c2 is not NULL
limit 23;
select  
  
    pg_catalog.bit_or(
      cast(ref_0.p_size as int4)) over (partition by ref_0.p_retailprice order by ref_0.p_size) as c0, 
  
    pg_catalog.stddev(
      cast(ref_0.p_retailprice as "numeric")) over (partition by ref_0.p_container,ref_0.p_size order by ref_0.p_null) as c1, 
  1 as c2
from 
  public.part as ref_0
where case when pg_catalog.timetz_smaller(
        cast(cast(coalesce(cast(null as timetz),
          cast(null as timetz)) as timetz) as timetz),
        cast(cast(null as timetz) as timetz)) < cast(null as timetz) then ref_0.p_mfgr else ref_0.p_mfgr end
     is not NULL;
select  
  pg_catalog.pg_stat_get_bgwriter_buf_written_clean() as c0, 
  ref_0.p_brand as c1, 
  subq_0.c0 as c2, 
  case when ((cast(null as tsquery) @> cast(null as tsquery)) 
        and ((select o_orderdate from public.orders limit 1 offset 6)
             <= (select o_orderdate from public.orders limit 1 offset 5)
            )) 
      and (pg_catalog.pg_last_xlog_receive_location() = cast(null as pg_lsn)) then 
      pg_catalog.max(
        cast(case when (cast(null as reltime) < cast(null as reltime)) 
            and ((((true) 
                  and ((EXISTS (
                      select  
                          (select pg_catalog.min(s_acctbal) from public.supplier)
                             as c0, 
                          (select ps_suppkey from public.partsupp limit 1 offset 5)
                             as c1, 
                          subq_0.c1 as c2, 
                          ref_0.p_brand as c3, 
                          subq_0.c0 as c4, 
                          (select s_nationkey from public.supplier limit 1 offset 6)
                             as c5, 
                          ref_0.p_null as c6, 
                          subq_0.c3 as c7, 
                          ref_0.p_comment as c8, 
                          subq_0.c2 as c9
                        from 
                          public.part as ref_3
                        where (select o_orderdate from public.orders limit 1 offset 83)
                             is NULL
                        limit 100)) 
                    or (cast(null as circle) && cast(null as circle)))) 
                and (ref_0.p_size is not NULL)) 
              or (ref_0.p_name is not NULL)) then cast(null as tid) else cast(null as tid) end
           as tid)) over (partition by subq_0.c1,ref_0.p_type,subq_0.c0,ref_0.p_name order by ref_0.p_name) else 
      pg_catalog.max(
        cast(case when (cast(null as reltime) < cast(null as reltime)) 
            and ((((true) 
                  and ((EXISTS (
                      select  
                          (select pg_catalog.min(s_acctbal) from public.supplier)
                             as c0, 
                          (select ps_suppkey from public.partsupp limit 1 offset 5)
                             as c1, 
                          subq_0.c1 as c2, 
                          ref_0.p_brand as c3, 
                          subq_0.c0 as c4, 
                          (select s_nationkey from public.supplier limit 1 offset 6)
                             as c5, 
                          ref_0.p_null as c6, 
                          subq_0.c3 as c7, 
                          ref_0.p_comment as c8, 
                          subq_0.c2 as c9
                        from 
                          public.part as ref_3
                        where (select o_orderdate from public.orders limit 1 offset 83)
                             is NULL
                        limit 100)) 
                    or (cast(null as circle) && cast(null as circle)))) 
                and (ref_0.p_size is not NULL)) 
              or (ref_0.p_name is not NULL)) then cast(null as tid) else cast(null as tid) end
           as tid)) over (partition by subq_0.c1,ref_0.p_type,subq_0.c0,ref_0.p_name order by ref_0.p_name) end
     as c3
from 
  public.part as ref_0,
  lateral (select  
        sample_0.o_totalprice as c0, 
        sample_0.o_orderpriority as c1, 
        
          pg_catalog.stddev(
            cast(cast(null as int8) as int8)) over (partition by ref_0.p_name order by ref_1.r_comment,sample_1.c_nationkey) as c2, 
        
          pg_catalog.stddev(
            cast(sample_2.l_suppkey as int4)) over (partition by sample_2.l_linestatus order by sample_2.l_comment) as c3, 
        ref_0.p_retailprice as c4
      from 
        public.orders as sample_0 tablesample system (6.3) 
              left join public.customer as sample_1 tablesample system (9) 
              on (sample_0.o_orderstatus = sample_1.c_phone )
            left join public.region as ref_1
            on (cast(null as circle) @ cast(null as circle))
          left join public.lineitem as sample_2 tablesample system (9.6) 
          on (EXISTS (
              select  
                  sample_2.l_linestatus as c0, 
                  ref_0.p_comment as c1
                from 
                  public.region as ref_2
                where sample_1.c_nationkey is NULL
                limit 165))
      where ((true) 
          and (false)) 
        or (sample_0.o_comment is not NULL)
      limit 166) as subq_0
where pg_catalog.path_add(
    cast(pg_catalog.path(
      cast(case when (cast(null as tinterval) #< cast(null as reltime)) 
          or (ref_0.p_type is not NULL) then cast(null as polygon) else cast(null as polygon) end
         as polygon)) as path),
    cast(pg_catalog.path_add(
      cast(case when (true) 
          or (ref_0.p_partkey <> cast(null as int2)) then case when (true) 
            and (cast(null as uuid) = cast(null as uuid)) then cast(null as path) else cast(null as path) end
           else case when (true) 
            and (cast(null as uuid) = cast(null as uuid)) then cast(null as path) else cast(null as path) end
           end
         as path),
      cast(cast(null as path) as path)) as path)) is NULL
limit 152;
select  
  
    pg_catalog.max(
      cast(pg_catalog.timetz_mi_interval(
        cast(cast(null as timetz) as timetz),
        cast(cast(null as "interval") as "interval")) as timetz)) over (partition by subq_1.c2,subq_1.c0,subq_1.c0 order by subq_1.c2) as c0, 
  pg_catalog.mktinterval(
    cast(pg_catalog.timenow() as abstime),
    cast(pg_catalog.tintervalend(
      cast(case when subq_1.c0 is not NULL then case when (cast(null as float8) > cast(null as float4)) 
            or (cast(null as float8) <> cast(null as float8)) then cast(null as tinterval) else cast(null as tinterval) end
           else case when (cast(null as float8) > cast(null as float4)) 
            or (cast(null as float8) <> cast(null as float8)) then cast(null as tinterval) else cast(null as tinterval) end
           end
         as tinterval)) as abstime)) as c1
from 
  (select  
        ref_0.ps_comment as c0, 
        subq_0.c0 as c1, 
        ref_0.ps_supplycost as c2
      from 
        public.partsupp as ref_0,
        lateral (select  
              ref_0.ps_null as c0
            from 
              public.supplier as sample_0 tablesample bernoulli (3.7) 
            where (cast(null as float8) >= cast(null as float8)) 
              and ((cast(null as line) ?|| cast(null as line)) 
                or ((cast(null as box) <@ cast(null as box)) 
                  or ((sample_0.s_nationkey is NULL) 
                    or ((((true) 
                          or (cast(null as anyarray) && cast(null as anyarray))) 
                        or (cast(null as line) ?# cast(null as box))) 
                      and ((false) 
                        or (false))))))) as subq_0
      where false
      limit 130) as subq_1
where case when (EXISTS (
        select  
            (select l_commitdate from public.lineitem limit 1 offset 2)
               as c0, 
            sample_1.o_orderkey as c1, 
            subq_2.c1 as c2, 
            subq_2.c0 as c3
          from 
            public.orders as sample_1 tablesample system (3) ,
            lateral (select  
                  sample_2.r_regionkey as c0, 
                  (select p_size from public.part limit 1 offset 3)
                     as c1, 
                  (select s_address from public.supplier limit 1 offset 4)
                     as c2, 
                  sample_2.r_name as c3, 
                  sample_1.o_custkey as c4
                from 
                  public.region as sample_2 tablesample bernoulli (5.4) 
                where sample_1.o_orderdate <> cast(null as timestamptz)
                limit 60) as subq_2
          where cast(null as box) <<| cast(null as box)
          limit 57)) 
      and (cast(null as bpchar) >= (select c_phone from public.customer limit 1 offset 14)
          ) then (select pg_catalog.jsonb_agg(o_orderkey) from public.orders)
       else (select pg_catalog.jsonb_agg(o_orderkey) from public.orders)
       end
     <> pg_catalog.jsonb_build_object()
limit 84;
select  
  ref_0.n_comment as c0, 
  pg_catalog.box_in(
    cast(cast(null as cstring) as cstring)) as c1, 
  (select c_phone from public.customer limit 1 offset 4)
     as c2, 
  24 as c3, 
  (select pg_catalog.bit_or(l_orderkey) from public.lineitem)
     as c4, 
  subq_2.c0 as c5, 
  cast(coalesce(subq_2.c0,
    ref_1.s_address) as "varchar") as c6, 
  subq_2.c0 as c7, 
  pg_catalog.pg_last_xlog_replay_location() as c8, 
  ref_0.n_null as c9, 
  ref_2.c_custkey as c10, 
  ref_0.n_nationkey as c11, 
  ref_2.c_name as c12, 
  cast(nullif(ref_1.s_address,
    ref_0.n_null) as "varchar") as c13, 
  ref_2.c_custkey as c14, 
  subq_2.c0 as c15, 
  ref_0.n_regionkey as c16, 
  subq_2.c0 as c17
from 
  public.nation as ref_0
    right join public.supplier as ref_1
      inner join public.customer as ref_2
        right join public.supplier as sample_0 tablesample bernoulli (4.8) 
        on ((cast(null as "interval") >= cast(null as "interval")) 
            and (cast(null as lseg) ?|| cast(null as lseg)))
      on (ref_1.s_address is not NULL)
    on (cast(null as lseg) <@ case when (((cast(null as point) @ cast(null as polygon)) 
                and ((cast(null as polygon) ~ cast(null as polygon)) 
                  or (cast(null as polygon) &< cast(null as polygon)))) 
              and (EXISTS (
                select  
                    sample_0.s_acctbal as c0, 
                    ref_0.n_nationkey as c1
                  from 
                    public.region as ref_3
                  where (false) 
                    and (cast(null as tid) < cast(null as tid))))) 
            and ((cast(null as inet) >>= cast(null as inet)) 
              or (((cast(null as date) <> (select l_shipdate from public.lineitem limit 1 offset 51)
                      ) 
                  or (cast(null as money) <= cast(null as money))) 
                and (cast(null as reltime) = cast(null as reltime)))) then case when EXISTS (
              select  
                  ref_1.s_null as c0, 
                  ref_2.c_phone as c1
                from 
                  public.orders as sample_1 tablesample bernoulli (8.7) 
                where ((select pg_catalog.min(c_phone) from public.customer)
                       ~* cast(null as text)) 
                  and (cast(null as tsquery) <> cast(null as tsquery))
                limit 95) then cast(null as box) else cast(null as box) end
             else case when EXISTS (
              select  
                  ref_1.s_null as c0, 
                  ref_2.c_phone as c1
                from 
                  public.orders as sample_1 tablesample bernoulli (8.7) 
                where ((select pg_catalog.min(c_phone) from public.customer)
                       ~* cast(null as text)) 
                  and (cast(null as tsquery) <> cast(null as tsquery))
                limit 95) then cast(null as box) else cast(null as box) end
             end
          ),
  lateral (select  
        sample_2.r_comment as c0
      from 
        public.part as ref_4
          inner join public.part as ref_5
            right join public.region as sample_2 tablesample system (4.7) 
              right join public.supplier as ref_6
              on (true)
            on (cast(null as timestamptz) <> cast(null as timestamptz))
          on (ref_4.p_container = ref_6.s_name ),
        lateral (select  
              ref_0.n_regionkey as c0, 
              ref_5.p_null as c1
            from 
              public.region as sample_3 tablesample bernoulli (8.9) 
            where (cast(null as float4) >= cast(null as float8)) 
              or (cast(null as tid) < cast(null as tid))
            limit 94) as subq_0,
        lateral (select  
              ref_4.p_brand as c0
            from 
              public.part as ref_7
            where cast(null as circle) >> cast(null as circle)) as subq_1
      where EXISTS (
        select  
            ref_2.c_null as c0, 
            22 as c1, 
            ref_6.s_acctbal as c2
          from 
            public.partsupp as sample_4 tablesample system (7.7) 
          where ((cast(null as circle) &< cast(null as circle)) 
              or (cast(null as bytea) = cast(null as bytea))) 
            and (cast(null as point) <> cast(null as point))
          limit 94)
      limit 95) as subq_2
where cast(nullif(pg_catalog.timenow(),
    cast(null as abstime)) as abstime) >= pg_catalog.timenow()
limit 118;
select distinct 
  cast(coalesce(cast(coalesce(ref_0.l_partkey,
      ref_0.l_linenumber) as int4),
    ref_0.l_orderkey) as int4) as c0, 
  ref_0.l_returnflag as c1, 
  
    pg_catalog.sum(
      cast(case when ref_0.l_shipinstruct is NULL then case when (cast(null as oid) <> cast(null as oid)) 
            or (cast(null as line) ?# cast(null as line)) then cast(null as money) else cast(null as money) end
           else case when (cast(null as oid) <> cast(null as oid)) 
            or (cast(null as line) ?# cast(null as line)) then cast(null as money) else cast(null as money) end
           end
         as money)) over (partition by ref_0.l_shipdate order by ref_0.l_shipinstruct,ref_0.l_shipinstruct,ref_0.l_linestatus,ref_0.l_tax,ref_0.l_returnflag) as c2, 
  ref_0.l_extendedprice as c3, 
  99 as c4, 
  ref_0.l_tax as c5, 
  ref_0.l_tax as c6, 
  (select l_shipinstruct from public.lineitem limit 1 offset 6)
     as c7, 
  ref_0.l_discount as c8, 
  cast(coalesce(case when pg_catalog.regprocsend(
          cast(cast(null as regproc) as regproc)) = case when ref_0.l_receiptdate >= cast(null as "timestamp") then case when cast(null as int8) <= ref_0.l_linenumber then cast(null as bytea) else cast(null as bytea) end
             else case when cast(null as int8) <= ref_0.l_linenumber then cast(null as bytea) else cast(null as bytea) end
             end
           then ref_0.l_suppkey else ref_0.l_suppkey end
      ,
    ref_0.l_partkey) as int4) as c9, 
  cast(nullif(pg_catalog.varchar(
      cast((select c_name from public.customer limit 1 offset 3)
         as "varchar"),
      cast(ref_0.l_linenumber as int4),
      cast(pg_catalog.time_ge(
        cast(pg_catalog.time(
          cast(cast(null as "interval") as "interval")) as "time"),
        cast(cast(null as "time") as "time")) as bool)),
    ref_0.l_null) as "varchar") as c10, 
  pg_catalog.pg_postmaster_start_time() as c11
from 
  public.lineitem as ref_0
where ref_0.l_returnflag is not NULL
limit 156;
select  
  pg_catalog.pg_stat_get_buf_alloc() as c0, 
  sample_3.p_comment as c1, 
  pg_catalog.txid_current_snapshot() as c2, 
  pg_catalog.timenow() as c3, 
  pg_catalog.pg_last_xact_replay_timestamp() as c4, 
  ref_1.o_comment as c5
from 
  (select  
              ref_0.r_null as c0, 
              ref_0.r_name as c1
            from 
              public.region as ref_0
            where (ref_0.r_null is NULL) 
              and (ref_0.r_comment is NULL)
            limit 96) as subq_0
        inner join public.orders as ref_1
              inner join public.lineitem as sample_0 tablesample system (5.4) 
              on (true)
            right join public.lineitem as ref_2
            on ((select l_tax from public.lineitem limit 1 offset 4)
                   is NULL)
          inner join public.customer as sample_1 tablesample system (8.8) 
          on (sample_0.l_suppkey = sample_1.c_custkey )
        on (subq_0.c0 = sample_0.l_comment )
      left join public.region as ref_3
            inner join public.partsupp as ref_4
            on ((cast(null as tsvector) = cast(null as tsvector)) 
                or ((select l_linenumber from public.lineitem limit 1 offset 1)
                     is not NULL))
          left join public.partsupp as sample_2 tablesample bernoulli (3.5) 
          on (cast(null as text) ~~* cast(null as text))
        right join public.part as sample_3 tablesample system (2.1) 
        on (cast(null as "char") >= cast(null as "char"))
      on ((ref_2.l_tax is NULL) 
          and (cast(null as circle) << cast(null as circle)))
    right join public.supplier as ref_5
    on (true)
where case when (case when ((cast(null as "time") <= cast(null as "time")) 
              or (EXISTS (
                select  
                    sample_2.ps_supplycost as c0, 
                    ref_3.r_regionkey as c1, 
                    sample_1.c_custkey as c2, 
                    subq_0.c1 as c3, 
                    (select ps_suppkey from public.partsupp limit 1 offset 38)
                       as c4, 
                    ref_2.l_orderkey as c5, 
                    ref_3.r_regionkey as c6, 
                    (select s_phone from public.supplier limit 1 offset 4)
                       as c7
                  from 
                    public.orders as ref_6
                  where sample_1.c_address is not NULL
                  limit 85))) 
            and ((ref_4.ps_suppkey is NULL) 
              or (((subq_0.c1 >= sample_0.l_returnflag) 
                  and (sample_3.p_brand is NULL)) 
                or (false))) then cast(null as text) else cast(null as text) end
           ~* pg_catalog.pg_export_snapshot()) 
      or (pg_catalog.pg_reload_conf() <= true) then pg_catalog.current_query() else pg_catalog.current_query() end
     ~~* cast(nullif(pg_catalog.pg_export_snapshot(),
    pg_catalog.substring(
      cast(pg_catalog.current_query() as text),
      cast(sample_2.ps_suppkey as int4),
      cast(sample_3.p_size as int4))) as text)
limit 74;
select  
  subq_0.c0 as c0, 
  (select o_orderpriority from public.orders limit 1 offset 2)
     as c1, 
  
    pg_catalog.var_pop(
      cast(pg_catalog.int2and(
        cast(pg_catalog.int2abs(
          cast(case when cast(null as name) !~~* cast(null as text) then cast(null as int2) else cast(null as int2) end
             as int2)) as int2),
        cast(cast(null as int2) as int2)) as int2)) over (partition by subq_0.c1,subq_0.c0 order by ref_0.s_comment,ref_0.s_null) as c2, 
  ref_0.s_acctbal as c3, 
  ref_0.s_comment as c4, 
  ref_0.s_name as c5
from 
  public.supplier as ref_0
    inner join (select  
          ref_1.c_address as c0, 
          sample_0.n_name as c1
        from 
          public.customer as ref_1
            right join public.nation as sample_0 tablesample bernoulli (0.9) 
              right join public.orders as ref_2
              on (false)
            on (cast(null as pg_lsn) <> cast(null as pg_lsn))
        where ref_2.o_orderdate is not NULL
        limit 160) as subq_0
    on ((pg_catalog.pg_backend_pid() <> ref_0.s_nationkey) 
        or (EXISTS (
          select  
              subq_0.c0 as c0, 
              subq_0.c0 as c1, 
              ref_3.ps_supplycost as c2, 
              54 as c3, 
              ref_3.ps_comment as c4, 
              ref_0.s_name as c5
            from 
              public.partsupp as ref_3
            where (cast(null as anyarray) < cast(null as anyarray)) 
              and (true))))
where ((true) 
    or (ref_0.s_address is not NULL)) 
  and (true)
limit 104;
select  
  pg_catalog.version() as c0, 
  
    pg_catalog.max(
      cast(pg_catalog.pg_last_xact_replay_timestamp() as timestamptz)) over (partition by ref_0.l_linestatus order by ref_0.l_commitdate) as c1, 
  ref_0.l_linestatus as c2, 
  (select pg_catalog.min(l_orderkey) from public.lineitem)
     as c3
from 
  public.lineitem as ref_0
where ref_0.l_orderkey is not NULL;
WITH 
jennifer_0 AS (select  
    case when false then sample_0.s_name else sample_0.s_name end
       as c0, 
    62 as c1, 
    sample_0.s_name as c2, 
    sample_0.s_nationkey as c3, 
    case when case when false then cast(null as date) else cast(null as date) end
           < 
          pg_catalog.max(
            cast(cast(null as timestamptz) as timestamptz)) over (partition by sample_0.s_null order by sample_0.s_suppkey) then sample_0.s_comment else sample_0.s_comment end
       as c4, 
    sample_0.s_name as c5, 
    pg_catalog.transaction_timestamp() as c6
  from 
    public.supplier as sample_0 tablesample bernoulli (8.9) 
  where sample_0.s_phone = sample_0.s_phone
  limit 110)
select  
    subq_0.c0 as c0, 
    pg_catalog.pg_stat_get_bgwriter_buf_written_checkpoints() as c1, 
    pg_catalog.pg_stat_get_bgwriter_buf_written_clean() as c2, 
    (select l_linenumber from public.lineitem limit 1 offset 2)
       as c3, 
    subq_0.c2 as c4
  from 
    (select  
          ref_0.c2 as c0, 
          ref_0.c6 as c1, 
          ref_0.c2 as c2
        from 
          jennifer_0 as ref_0
        where true
        limit 116) as subq_0
  where (select pg_catalog.stddev_pop(l_quantity) from public.lineitem)
       is NULL
  limit 106
;
select  
  sample_1.ps_suppkey as c0, 
  sample_1.ps_supplycost as c1, 
  case when cast(null as lseg) ?|| pg_catalog.lseg_in(
        cast(pg_catalog.int4out(
          cast(ref_0.ps_suppkey as int4)) as cstring)) then sample_0.p_size else sample_0.p_size end
     as c2, 
  ref_0.ps_null as c3, 
  sample_1.ps_suppkey as c4
from 
  public.part as sample_0 tablesample system (0.4) 
      inner join public.partsupp as sample_1 tablesample bernoulli (9.5) 
      on (sample_0.p_container is not NULL)
    right join public.partsupp as ref_0
    on (sample_1.ps_partkey = ref_0.ps_partkey )
where cast(nullif(pg_catalog.statement_timestamp(),
    cast(null as timestamptz)) as timestamptz) > case when sample_1.ps_supplycost < (select p_retailprice from public.part limit 1 offset 5)
         then pg_catalog.date(
      cast(cast(coalesce(pg_catalog.clock_timestamp(),
        pg_catalog.transaction_timestamp()) as timestamptz) as timestamptz)) else pg_catalog.date(
      cast(cast(coalesce(pg_catalog.clock_timestamp(),
        pg_catalog.transaction_timestamp()) as timestamptz) as timestamptz)) end
    ;
select  
  ref_0.l_quantity as c0, 
  pg_catalog.inet_client_port() as c1
from 
  public.lineitem as ref_0,
  lateral (select  
        (select pg_catalog.json_agg(r_regionkey) from public.region)
           as c0, 
        sample_0.p_type as c1, 
        ref_0.l_shipinstruct as c2, 
        ref_1.n_null as c3, 
        (select l_partkey from public.lineitem limit 1 offset 1)
           as c4, 
        (select pg_catalog.sum(r_regionkey) from public.region)
           as c5, 
        subq_0.c3 as c6, 
        ref_0.l_quantity as c7, 
        54 as c8, 
        ref_0.l_comment as c9, 
        ref_1.n_regionkey as c10, 
        ref_0.l_returnflag as c11, 
        subq_0.c1 as c12, 
        ref_1.n_comment as c13, 
        case when ref_1.n_name is NULL then subq_0.c1 else subq_0.c1 end
           as c14
      from 
        public.part as sample_0 tablesample system (6.2) 
          left join public.nation as ref_1
          on ((cast(null as float4) > cast(null as float4)) 
              and (cast(null as anyrange) <@ cast(null as anyrange))),
        lateral (select  
              ref_0.l_comment as c0, 
              ref_2.r_comment as c1, 
              ref_2.r_comment as c2, 
              ref_2.r_name as c3, 
              ref_1.n_null as c4
            from 
              public.region as ref_2
            where cast(null as lseg) <@ cast(null as box)) as subq_0
      where ((true) 
          and (true)) 
        or (cast(null as inet) >= cast(null as inet))
      limit 116) as subq_1
where (case when case when (subq_1.c5 = subq_1.c5) 
            or (cast(null as tinterval) #< cast(null as reltime)) then cast(coalesce(cast(null as box),
            cast(null as box)) as box) else cast(coalesce(cast(null as box),
            cast(null as box)) as box) end
           > cast(null as box) then pg_catalog.pg_backup_start_time() else pg_catalog.pg_backup_start_time() end
       <= pg_catalog.clock_timestamp()) 
  or (pg_catalog.transaction_timestamp() <= ref_0.l_commitdate)
limit 124;
update public.partsupp set 
  ps_partkey = public.partsupp.ps_suppkey, 
  ps_supplycost = public.partsupp.ps_supplycost, 
  ps_null = public.partsupp.ps_null
returning 
  56 as c0;
update public.lineitem set 
  l_orderkey = public.lineitem.l_partkey, 
  l_partkey = public.lineitem.l_suppkey, 
  l_suppkey = public.lineitem.l_suppkey, 
  l_quantity = public.lineitem.l_discount, 
  l_tax = public.lineitem.l_discount, 
  l_shipdate = public.lineitem.l_commitdate, 
  l_receiptdate = case when (pg_catalog.length(
          cast(cast(null as path) as path)) < pg_catalog.pi()) 
      or ((case when cast(null as uuid) = cast(null as uuid) then public.lineitem.l_shipmode else public.lineitem.l_shipmode end
             !~~* case when (cast(null as inet) <= cast(null as inet)) 
              and ((cast(null as tsvector) = cast(null as tsvector)) 
                and (cast(null as text) ~ cast(null as text))) then cast(null as text) else cast(null as text) end
            ) 
        or (case when cast(null as inet) >> cast(null as inet) then cast(null as "char") else cast(null as "char") end
             <> cast(null as "char"))) then public.lineitem.l_shipdate else public.lineitem.l_shipdate end
    , 
  l_comment = cast(coalesce(public.lineitem.l_comment,
    public.lineitem.l_null) as "varchar"), 
  l_null = case when (EXISTS (
        select  
            ref_0.p_null as c0, 
            ref_0.p_comment as c1, 
            public.lineitem.l_linestatus as c2, 
            public.lineitem.l_extendedprice as c3, 
            public.lineitem.l_linenumber as c4, 
            ref_0.p_null as c5, 
            public.lineitem.l_orderkey as c6, 
            ref_0.p_partkey as c7, 
            public.lineitem.l_suppkey as c8, 
            public.lineitem.l_partkey as c9, 
            public.lineitem.l_quantity as c10, 
            (select p_null from public.part limit 1 offset 2)
               as c11, 
            public.lineitem.l_comment as c12, 
            public.lineitem.l_receiptdate as c13, 
            ref_0.p_null as c14, 
            ref_0.p_retailprice as c15, 
            ref_0.p_size as c16, 
            ref_0.p_comment as c17, 
            (select o_custkey from public.orders limit 1 offset 2)
               as c18, 
            ref_0.p_null as c19, 
            public.lineitem.l_extendedprice as c20, 
            ref_0.p_null as c21, 
            public.lineitem.l_discount as c22, 
            ref_0.p_comment as c23, 
            (select o_clerk from public.orders limit 1 offset 4)
               as c24, 
            public.lineitem.l_receiptdate as c25, 
            ref_0.p_comment as c26, 
            public.lineitem.l_linestatus as c27, 
            ref_0.p_retailprice as c28, 
            public.lineitem.l_receiptdate as c29, 
            ref_0.p_name as c30, 
            public.lineitem.l_quantity as c31, 
            77 as c32
          from 
            public.part as ref_0
          where cast(null as polygon) >> cast(null as polygon))) 
      or (public.lineitem.l_quantity is not NULL) then public.lineitem.l_null else public.lineitem.l_null end
    
returning 
  pg_catalog.pg_conf_load_time() as c0, 
  public.lineitem.l_tax as c1, 
  public.lineitem.l_returnflag as c2, 
  public.lineitem.l_linestatus as c3, 
  case when (pg_catalog.char(
          cast(case when cast(null as polygon) <@ cast(null as polygon) then cast(null as text) else cast(null as text) end
             as text)) = cast(null as "char")) 
      and (true) then public.lineitem.l_shipdate else public.lineitem.l_shipdate end
     as c4, 
  public.lineitem.l_partkey as c5, 
  public.lineitem.l_extendedprice as c6, 
  public.lineitem.l_comment as c7, 
  public.lineitem.l_linenumber as c8, 
  public.lineitem.l_tax as c9;
update public.lineitem set 
  l_partkey = public.lineitem.l_orderkey, 
  l_quantity = public.lineitem.l_discount, 
  l_tax = public.lineitem.l_discount, 
  l_receiptdate = public.lineitem.l_shipdate, 
  l_null = public.lineitem.l_null
returning 
  public.lineitem.l_quantity as c0, 
  public.lineitem.l_suppkey as c1, 
  pg_catalog.ishorizontal(
    cast(cast(null as line) as line)) as c2, 
  public.lineitem.l_shipdate as c3, 
  pg_catalog.clock_timestamp() as c4, 
  public.lineitem.l_linestatus as c5;
select  
  pg_catalog.tsq_mcontained(
    cast(pg_catalog.tsquery_and(
      cast(cast(null as tsquery) as tsquery),
      cast(pg_catalog.to_tsquery(
        cast(pg_catalog.version() as text)) as tsquery)) as tsquery),
    cast(case when EXISTS (
        select  
            sample_0.l_tax as c0
          from 
            public.region as ref_0
          where true
          limit 78) then cast(null as tsquery) else cast(null as tsquery) end
       as tsquery)) as c0, 
  sample_0.l_linenumber as c1, 
  sample_0.l_shipdate as c2, 
  sample_0.l_null as c3, 
  pg_catalog.pg_stat_get_checkpoint_write_time() as c4, 
  sample_0.l_returnflag as c5, 
  pg_catalog.pg_is_xlog_replay_paused() as c6
from 
  public.lineitem as sample_0 tablesample bernoulli (0.4) 
where sample_0.l_linenumber is NULL
limit 161;
update public.customer set 
  c_nationkey = public.customer.c_custkey, 
  c_acctbal = public.customer.c_acctbal, 
  c_null = public.customer.c_null
returning 
  public.customer.c_custkey as c0, 
  public.customer.c_mktsegment as c1, 
  pg_catalog.get_current_ts_config() as c2, 
  public.customer.c_nationkey as c3, 
  public.customer.c_phone as c4, 
  cast(coalesce((select pg_catalog.jsonb_agg(ps_partkey) from public.partsupp)
      ,
    pg_catalog.jsonb_build_object()) as jsonb) as c5, 
  public.customer.c_name as c6, 
  public.customer.c_custkey as c7, 
  public.customer.c_custkey as c8, 
  public.customer.c_null as c9, 
  public.customer.c_nationkey as c10, 
  public.customer.c_phone as c11, 
  public.customer.c_phone as c12, 
  public.customer.c_null as c13;
update public.orders set 
  o_custkey = 19, 
  o_orderstatus = public.orders.o_orderstatus, 
  o_orderdate = public.orders.o_orderdate, 
  o_comment = public.orders.o_comment, 
  o_null = public.orders.o_null
returning 
  public.orders.o_clerk as c0, 
  public.orders.o_shippriority as c1, 
  public.orders.o_orderkey as c2, 
  (select p_name from public.part limit 1 offset 4)
     as c3;
select  
  case when true then (select ps_comment from public.partsupp limit 1 offset 2)
       else (select ps_comment from public.partsupp limit 1 offset 2)
       end
     as c0, 
  ref_0.l_shipinstruct as c1, 
  case when subq_0.c4 is NULL then ref_0.l_linenumber else ref_0.l_linenumber end
     as c2, 
  subq_0.c0 as c3
from 
  public.lineitem as ref_0,
  lateral (select  
        ref_0.l_suppkey as c0, 
        sample_0.o_orderpriority as c1, 
        sample_0.o_totalprice as c2, 
        sample_0.o_null as c3, 
        ref_0.l_quantity as c4, 
        ref_0.l_shipmode as c5
      from 
        public.orders as sample_0 tablesample system (6.2) 
      where pg_catalog.to_tsquery(
          cast(cast(null as text) as text)) <> cast(null as tsquery)
      limit 43) as subq_0
where pg_catalog.cashsmaller(
    cast(case when ref_0.l_partkey <> case when cast(null as float8) < cast(null as float8) then pg_catalog.pg_stat_get_numscans(
            cast(cast(null as oid) as oid)) else pg_catalog.pg_stat_get_numscans(
            cast(cast(null as oid) as oid)) end
           then case when cast(null as name) = cast(null as name) then cast(nullif(cast(null as money),
          case when cast(null as money) >= cast(null as money) then cast(null as money) else cast(null as money) end
            ) as money) else cast(nullif(cast(null as money),
          case when cast(null as money) >= cast(null as money) then cast(null as money) else cast(null as money) end
            ) as money) end
         else case when cast(null as name) = cast(null as name) then cast(nullif(cast(null as money),
          case when cast(null as money) >= cast(null as money) then cast(null as money) else cast(null as money) end
            ) as money) else cast(nullif(cast(null as money),
          case when cast(null as money) >= cast(null as money) then cast(null as money) else cast(null as money) end
            ) as money) end
         end
       as money),
    cast(pg_catalog.cash_div_int4(
      cast(case when case when ref_0.l_partkey = ref_0.l_partkey then cast(null as tsvector) else cast(null as tsvector) end
             <> case when (true) 
              or (true) then cast(null as tsvector) else cast(null as tsvector) end
             then pg_catalog.cash_div_int2(
          cast(cast(null as money) as money),
          cast(case when (((cast(null as float4) > cast(null as float8)) 
                  or (true)) 
                or (cast(null as abstime) > cast(null as abstime))) 
              and (cast(null as timetz) <= cast(null as timetz)) then cast(null as int2) else cast(null as int2) end
             as int2)) else pg_catalog.cash_div_int2(
          cast(cast(null as money) as money),
          cast(case when (((cast(null as float4) > cast(null as float8)) 
                  or (true)) 
                or (cast(null as abstime) > cast(null as abstime))) 
              and (cast(null as timetz) <= cast(null as timetz)) then cast(null as int2) else cast(null as int2) end
             as int2)) end
         as money),
      cast(ref_0.l_orderkey as int4)) as money)) is NULL
limit 96;
select  
  sample_0.c_nationkey as c0, 
  case when pg_catalog.jsonb_build_object() @> pg_catalog.jsonb_build_array() then subq_0.c0 else subq_0.c0 end
     as c1
from 
  public.customer as sample_0 tablesample system (0.7) ,
  lateral (select  
        sample_0.c_comment as c0, 
        (select o_totalprice from public.orders limit 1 offset 3)
           as c1, 
        sample_1.ps_supplycost as c2
      from 
        public.partsupp as sample_1 tablesample system (6.3) 
      where ((sample_1.ps_supplycost is not NULL) 
          or (cast(null as pg_lsn) > cast(null as pg_lsn))) 
        or (cast(null as text) <= cast(null as text))
      limit 84) as subq_0
where subq_0.c0 is not NULL;
select  
  ref_0.o_orderpriority as c0, 
  ref_0.o_orderstatus as c1, 
  ref_0.o_orderkey as c2, 
  (select c_comment from public.customer limit 1 offset 43)
     as c3, 
  ref_0.o_comment as c4, 
  ref_0.o_custkey as c5
from 
  public.orders as ref_0
where (cast(coalesce(pg_catalog.close_sb(
        cast(cast(null as lseg) as lseg),
        cast(cast(coalesce(cast(nullif(cast(null as box),
            cast(null as box)) as box),
          cast(null as box)) as box) as box)),
      case when case when EXISTS (
              select  
                  (select l_comment from public.lineitem limit 1 offset 5)
                     as c0, 
                  ref_1.p_name as c1, 
                  ref_1.p_null as c2, 
                  ref_0.o_orderpriority as c3, 
                  ref_0.o_orderkey as c4
                from 
                  public.part as ref_1
                where (ref_0.o_comment is NULL) 
                  or (cast(null as "timestamp") >= ref_0.o_orderdate)) then cast(null as macaddr) else cast(null as macaddr) end
             = case when ((cast(null as timetz) > cast(null as timetz)) 
                or (ref_0.o_orderpriority !~~ cast(null as text))) 
              and (ref_0.o_totalprice > ref_0.o_totalprice) then cast(null as macaddr) else cast(null as macaddr) end
             then pg_catalog.point(
          cast(cast(null as float8) as float8),
          cast(cast(null as float8) as float8)) else pg_catalog.point(
          cast(cast(null as float8) as float8),
          cast(cast(null as float8) as float8)) end
        ) as point) ?| case when EXISTS (
        select  
            (select s_name from public.supplier limit 1 offset 4)
               as c0, 
            ref_0.o_comment as c1, 
            ref_0.o_totalprice as c2, 
            sample_0.r_regionkey as c3, 
            ref_0.o_clerk as c4, 
            sample_0.r_comment as c5, 
            sample_0.r_null as c6, 
            sample_0.r_null as c7, 
            ref_0.o_orderdate as c8, 
            ref_0.o_totalprice as c9, 
            sample_0.r_null as c10, 
            sample_0.r_comment as c11, 
            sample_0.r_name as c12, 
            sample_0.r_comment as c13, 
            sample_0.r_name as c14, 
            sample_0.r_null as c15
          from 
            public.region as sample_0 tablesample bernoulli (9.7) 
          where cast(null as int2vector) = cast(null as int2vector)) then case when false then case when true then cast(null as point) else cast(null as point) end
           else case when true then cast(null as point) else cast(null as point) end
           end
         else case when false then case when true then cast(null as point) else cast(null as point) end
           else case when true then cast(null as point) else cast(null as point) end
           end
         end
      ) 
  or (cast(null as record) = case when case when cast(null as macaddr) >= cast(null as macaddr) then cast(null as polygon) else cast(null as polygon) end
           &> cast(null as polygon) then cast(coalesce(cast(null as record),
        case when (false >= false) 
            and (ref_0.o_clerk is NULL) then cast(null as record) else cast(null as record) end
          ) as record) else cast(coalesce(cast(null as record),
        case when (false >= false) 
            and (ref_0.o_clerk is NULL) then cast(null as record) else cast(null as record) end
          ) as record) end
      )
limit 95;
update public.partsupp set 
  ps_null = public.partsupp.ps_null
returning 
  public.partsupp.ps_comment as c0, 
  public.partsupp.ps_comment as c1, 
  public.partsupp.ps_availqty as c2, 
  case when (pg_catalog.timeofday() !~* cast(null as text)) 
      or (cast(null as jsonb) @> case when (public.partsupp.ps_comment is not NULL) 
            or (cast(null as name) > cast(null as name)) then cast(null as jsonb) else cast(null as jsonb) end
          ) then public.partsupp.ps_availqty else public.partsupp.ps_availqty end
     as c3;
select  
  pg_catalog.text_le(
    cast(
      pg_catalog.min(
        cast(cast(null as text) as text)) over (partition by sample_0.ps_suppkey order by ref_0.n_comment,sample_0.ps_null) as text),
    cast(pg_catalog.version() as text)) as c0
from 
  public.partsupp as sample_0 tablesample system (9.2) 
    inner join public.nation as ref_0
    on ((select c_nationkey from public.customer limit 1 offset 3)
           is not NULL)
where ref_0.n_name is not NULL
limit 174;
select  
  subq_0.c2 as c0, 
  
    pg_catalog.max(
      cast(cast(null as int2) as int2)) over (partition by subq_0.c1,subq_0.c0 order by subq_0.c2) as c1, 
  case when case when (cast(null as "timestamp") > cast(null as "timestamp")) 
          or (((cast(null as "time") > cast(null as "time")) 
              or (cast(null as circle) |&> cast(null as circle))) 
            and ((cast(null as oidvector) > cast(null as oidvector)) 
              or ((false) 
                or (cast(null as lseg) ?# cast(null as box))))) then subq_0.c0 else subq_0.c0 end
         is not NULL then subq_0.c1 else subq_0.c1 end
     as c2, 
  cast(coalesce(subq_0.c0,
    pg_catalog.inet_client_port()) as int4) as c3, 
  subq_0.c2 as c4, 
  subq_0.c0 as c5, 
  92 as c6, 
  subq_0.c0 as c7, 
  subq_0.c2 as c8, 
  subq_0.c2 as c9, 
  subq_0.c0 as c10, 
  
    pg_catalog.regr_slope(
      cast(cast(null as float8) as float8),
      cast(cast(null as float8) as float8)) over (partition by subq_0.c2 order by subq_0.c1,subq_0.c2) as c11, 
  subq_0.c2 as c12, 
  pg_catalog.pg_stat_get_db_conflict_lock(
    cast(pg_catalog.pg_my_temp_schema() as oid)) as c13
from 
  (select  
        sample_0.o_shippriority as c0, 
        sample_0.o_totalprice as c1, 
        sample_0.o_orderstatus as c2
      from 
        public.orders as sample_0 tablesample system (8.3) 
      where case when EXISTS (
            select  
                sample_1.c_null as c0, 
                sample_0.o_comment as c1, 
                sample_0.o_totalprice as c2, 
                sample_0.o_clerk as c3, 
                sample_0.o_null as c4, 
                sample_0.o_clerk as c5, 
                sample_1.c_nationkey as c6
              from 
                public.customer as sample_1 tablesample bernoulli (9.3) 
              where cast(null as "time") <= cast(null as "time")
              limit 78) then case when true then cast(null as timetz) else cast(null as timetz) end
             else case when true then cast(null as timetz) else cast(null as timetz) end
             end
           > case when sample_0.o_orderdate < sample_0.o_orderdate then cast(null as timetz) else cast(null as timetz) end
          
      limit 88) as subq_0
where (EXISTS (
    select  
        pg_catalog.version() as c0, 
        subq_0.c0 as c1
      from 
        public.customer as ref_0
      where (pg_catalog.jsonb_build_object() <> (select pg_catalog.jsonb_agg(o_orderkey) from public.orders)
            ) 
        or ((cast(null as uuid) >= cast(null as uuid)) 
          or ((cast(null as money) <= cast(null as money)) 
            and (cast(null as box) ~ cast(null as box))))
      limit 92)) 
  and (true)
limit 97;
update public.partsupp set 
  ps_partkey = public.partsupp.ps_availqty, 
  ps_comment = public.partsupp.ps_comment
returning 
  public.partsupp.ps_null as c0, 
  public.partsupp.ps_supplycost as c1, 
  pg_catalog.pg_conf_load_time() as c2, 
  public.partsupp.ps_availqty as c3, 
  cast(nullif(public.partsupp.ps_supplycost,
    public.partsupp.ps_supplycost) as "numeric") as c4, 
  public.partsupp.ps_availqty as c5, 
  public.partsupp.ps_availqty as c6, 
  public.partsupp.ps_partkey as c7, 
  cast(nullif(public.partsupp.ps_null,
    case when (public.partsupp.ps_partkey is NULL) 
        and ((cast(null as circle) >> cast(null as circle)) 
          and ((true) 
            or (cast(null as "timestamp") <> cast(null as date)))) then public.partsupp.ps_comment else public.partsupp.ps_comment end
      ) as "varchar") as c8, 
  public.partsupp.ps_suppkey as c9;
select  
  ref_0.l_commitdate as c0
from 
  public.lineitem as ref_0
where pg_catalog.oidsmaller(
    cast(case when ref_0.l_receiptdate is NULL then cast(nullif(case when cast(null as circle) @> cast(null as point) then cast(null as oid) else cast(null as oid) end
          ,
        cast(null as oid)) as oid) else cast(nullif(case when cast(null as circle) @> cast(null as point) then cast(null as oid) else cast(null as oid) end
          ,
        cast(null as oid)) as oid) end
       as oid),
    cast(case when (cast(null as "timestamp") > pg_catalog.interval_pl_date(
            cast(cast(null as "interval") as "interval"),
            cast(cast(null as date) as date))) 
        or (EXISTS (
          select  
              ref_0.l_returnflag as c0, 
              86 as c1, 
              ref_0.l_tax as c2
            from 
              public.region as ref_1
            where cast(null as inet) <<= cast(null as inet)
            limit 149)) then cast(nullif(cast(null as oid),
        case when cast(null as anyarray) > cast(null as anyarray) then pg_catalog.pg_my_temp_schema() else pg_catalog.pg_my_temp_schema() end
          ) as oid) else cast(nullif(cast(null as oid),
        case when cast(null as anyarray) > cast(null as anyarray) then pg_catalog.pg_my_temp_schema() else pg_catalog.pg_my_temp_schema() end
          ) as oid) end
       as oid)) < case when (case when (select pg_catalog.jsonb_agg(c_custkey) from public.customer)
               @> cast(null as jsonb) then pg_catalog.char(
            cast(ref_0.l_orderkey as int4)) else pg_catalog.char(
            cast(ref_0.l_orderkey as int4)) end
           < cast(coalesce(cast(null as "char"),
          cast(null as "char")) as "char")) 
      and ((ref_0.l_linestatus is not NULL) 
        or (cast(null as name) >= case when ((cast(null as "timestamp") >= cast(null as timestamptz)) 
                or (cast(null as "time") >= cast(null as "time"))) 
              and ((cast(null as "interval") > cast(null as "interval")) 
                and ((cast(null as polygon) ~ cast(null as polygon)) 
                  and (cast(null as anyrange) = cast(null as anyrange)))) then cast(null as name) else cast(null as name) end
            )) then cast(null as oid) else cast(null as oid) end
    ;
select  
  pg_catalog.timetz_larger(
    cast(
      pg_catalog.min(
        cast(pg_catalog.timetz_in(
          cast(pg_catalog.timetz_out(
            cast(cast(null as timetz) as timetz)) as cstring),
          cast(pg_catalog.pg_my_temp_schema() as oid),
          cast(ref_0.o_shippriority as int4)) as timetz)) over (partition by ref_0.o_totalprice order by ref_0.o_custkey,ref_0.o_custkey,ref_0.o_orderstatus,ref_0.o_orderdate) as timetz),
    cast(cast(coalesce(
        pg_catalog.min(
          cast(cast(null as timetz) as timetz)) over (partition by ref_0.o_totalprice,ref_0.o_orderstatus,ref_0.o_totalprice order by ref_0.o_null),
      pg_catalog.timezone(
        cast(case when cast(null as int2) <= ref_0.o_orderkey then 
            pg_catalog.sum(
              cast(cast(null as "interval") as "interval")) over (partition by ref_0.o_custkey order by ref_0.o_comment,ref_0.o_orderkey) else 
            pg_catalog.sum(
              cast(cast(null as "interval") as "interval")) over (partition by ref_0.o_custkey order by ref_0.o_comment,ref_0.o_orderkey) end
           as "interval"),
        cast(pg_catalog.timetz_mi_interval(
          cast(
            pg_catalog.min(
              cast(cast(null as timetz) as timetz)) over (partition by ref_0.o_orderdate,ref_0.o_clerk order by ref_0.o_custkey) as timetz),
          cast(case when cast(null as cid) = cast(null as cid) then cast(null as "interval") else cast(null as "interval") end
             as "interval")) as timetz))) as timetz) as timetz)) as c0, 
  ref_0.o_shippriority as c1, 
  ref_0.o_orderkey as c2, 
  ref_0.o_orderdate as c3, 
  ref_0.o_orderpriority as c4
from 
  public.orders as ref_0
where (ref_0.o_orderpriority is not NULL) 
  or (case when (ref_0.o_custkey is NULL) 
        or (cast(null as "time") >= cast(null as "time")) then case when cast(null as "timestamp") <> case when cast(null as int8) > ref_0.o_shippriority then cast(null as timestamptz) else cast(null as timestamptz) end
             then pg_catalog.pg_stat_get_bgwriter_buf_written_clean() else pg_catalog.pg_stat_get_bgwriter_buf_written_clean() end
         else case when cast(null as "timestamp") <> case when cast(null as int8) > ref_0.o_shippriority then cast(null as timestamptz) else cast(null as timestamptz) end
             then pg_catalog.pg_stat_get_bgwriter_buf_written_clean() else pg_catalog.pg_stat_get_bgwriter_buf_written_clean() end
         end
       > cast(null as int2))
limit 66;
select  
  subq_0.c0 as c0, 
  subq_0.c1 as c1, 
  subq_0.c2 as c2, 
  subq_0.c2 as c3, 
  59 as c4, 
  subq_0.c1 as c5, 
  subq_0.c0 as c6, 
  pg_catalog.pg_export_snapshot() as c7
from 
  (select  
        ref_0.o_comment as c0, 
        ref_0.o_shippriority as c1, 
        ref_0.o_orderpriority as c2
      from 
        public.orders as ref_0
      where (cast(null as int2) < cast(null as int2)) 
        and (cast(null as timestamptz) >= cast(null as "timestamp"))
      limit 72) as subq_0
where pg_catalog.jsonb_build_array() > cast(coalesce(cast(null as jsonb),
    cast(coalesce(pg_catalog.jsonb_array_element(
        cast(case when cast(null as text) !~~ cast(null as text) then cast(coalesce(cast(null as jsonb),
            cast(null as jsonb)) as jsonb) else cast(coalesce(cast(null as jsonb),
            cast(null as jsonb)) as jsonb) end
           as jsonb),
        cast(subq_0.c1 as int4)),
      cast(nullif((select pg_catalog.jsonb_agg(o_orderkey) from public.orders)
          ,
        (select pg_catalog.jsonb_agg(n_nationkey) from public.nation)
          ) as jsonb)) as jsonb)) as jsonb)
limit 73;
select  
  subq_0.c15 as c0, 
  subq_0.c14 as c1, 
  pg_catalog.isfinite(
    cast(subq_0.c9 as date)) as c2, 
  pg_catalog.pg_stat_get_buf_written_backend() as c3, 
  subq_0.c3 as c4, 
  subq_0.c15 as c5, 
  
    pg_catalog.sum(
      cast(cast(nullif(case when cast(null as text) ~<=~ cast(null as text) then cast(nullif(cast(null as "interval"),
            cast(null as "interval")) as "interval") else cast(nullif(cast(null as "interval"),
            cast(null as "interval")) as "interval") end
          ,
        cast(null as "interval")) as "interval") as "interval")) over (partition by subq_0.c12 order by subq_0.c9,subq_0.c12,subq_0.c5) as c6, 
  subq_0.c0 as c7, 
  subq_0.c7 as c8, 
  pg_catalog.pg_stat_get_blocks_fetched(
    cast(pg_catalog.oid(
      cast(pg_catalog.currval(
        cast(cast(null as regclass) as regclass)) as int8)) as oid)) as c9, 
  (select r_null from public.region limit 1 offset 3)
     as c10
from 
  (select  
        ref_0.l_suppkey as c0, 
        ref_0.l_returnflag as c1, 
        ref_0.l_quantity as c2, 
        (select s_address from public.supplier limit 1 offset 1)
           as c3, 
        ref_0.l_tax as c4, 
        ref_0.l_returnflag as c5, 
        ref_0.l_partkey as c6, 
        (select ps_comment from public.partsupp limit 1 offset 6)
           as c7, 
        ref_0.l_extendedprice as c8, 
        ref_0.l_receiptdate as c9, 
        ref_0.l_tax as c10, 
        ref_0.l_extendedprice as c11, 
        ref_0.l_extendedprice as c12, 
        ref_0.l_receiptdate as c13, 
        64 as c14, 
        ref_0.l_discount as c15
      from 
        public.lineitem as ref_0
      where EXISTS (
        select  
            sample_0.l_orderkey as c0, 
            ref_0.l_returnflag as c1, 
            sample_0.l_commitdate as c2, 
            ref_0.l_comment as c3, 
            sample_0.l_partkey as c4, 
            sample_0.l_receiptdate as c5, 
            ref_0.l_returnflag as c6
          from 
            public.lineitem as sample_0 tablesample system (6.4) 
          where sample_0.l_discount is not NULL
          limit 106)) as subq_0
where (cast(coalesce(cast(null as "bit"),
      cast(coalesce(case when cast(null as tinterval) << cast(null as tinterval) then cast(null as "bit") else cast(null as "bit") end
          ,
        pg_catalog.bit(
          cast(subq_0.c14 as int4),
          cast(subq_0.c14 as int4))) as "bit")) as "bit") >= case when subq_0.c3 is not NULL then case when subq_0.c13 is not NULL then cast(null as "bit") else cast(null as "bit") end
         else case when subq_0.c13 is not NULL then cast(null as "bit") else cast(null as "bit") end
         end
      ) 
  or (EXISTS (
    select  
        8 as c0, 
        subq_0.c10 as c1, 
        subq_2.c0 as c2
      from 
        (select  
              (select s_name from public.supplier limit 1 offset 37)
                 as c0, 
              ref_3.s_nationkey as c1
            from 
              public.region as ref_2
                right join public.supplier as ref_3
                on (ref_2.r_regionkey = ref_3.s_suppkey )
            where (ref_2.r_comment is NULL) 
              or ((cast(null as cid) = cast(null as cid)) 
                or (EXISTS (
                  select  
                      26 as c0, 
                      (select s_address from public.supplier limit 1 offset 5)
                         as c1, 
                      sample_2.p_brand as c2, 
                      (select s_address from public.supplier limit 1 offset 4)
                         as c3
                    from 
                      public.part as sample_2 tablesample system (9.4) 
                    where ref_3.s_phone is NULL)))) as subq_2
      where cast(coalesce(cast(null as path),
          cast(null as path)) as path) ?# cast(nullif(cast(null as path),
          cast(null as path)) as path)
      limit 171))
limit 89;
update public.partsupp set 
  ps_suppkey = cast(nullif(public.partsupp.ps_partkey,
    pg_catalog.bttintervalcmp(
      cast(cast(null as tinterval) as tinterval),
      cast(cast(null as tinterval) as tinterval))) as int4), 
  ps_availqty = public.partsupp.ps_partkey, 
  ps_supplycost = public.partsupp.ps_supplycost, 
  ps_comment = public.partsupp.ps_comment
returning 
  89 as c0;
select  
  ref_0.l_comment as c0, 
  pg_catalog.pg_current_xlog_location() as c1, 
  pg_catalog.path_center(
    cast(cast(nullif(cast(null as path),
      cast(null as path)) as path) as path)) as c2, 
  ref_0.l_null as c3, 
  case when ref_0.l_shipinstruct is NULL then ref_0.l_commitdate else ref_0.l_commitdate end
     as c4, 
  pg_catalog.to_jsonb(
    cast(ref_0.l_shipinstruct as bpchar)) as c5, 
  ref_0.l_orderkey as c6, 
  case when pg_catalog.interval_div(
        cast(cast(null as "interval") as "interval"),
        cast(cast(null as float8) as float8)) >= case when ref_0.l_shipinstruct is not NULL then cast(null as "interval") else cast(null as "interval") end
         then ref_0.l_quantity else ref_0.l_quantity end
     as c7, 
  ref_0.l_shipdate as c8, 
  ref_0.l_comment as c9, 
  ref_0.l_shipinstruct as c10, 
  ref_0.l_returnflag as c11, 
  (select o_totalprice from public.orders limit 1 offset 5)
     as c12, 
  ref_0.l_receiptdate as c13, 
  cast(coalesce(ref_0.l_linestatus,
    
      pg_catalog.min(
        cast(ref_0.l_linestatus as bpchar)) over (partition by ref_0.l_receiptdate,ref_0.l_receiptdate order by ref_0.l_comment,ref_0.l_commitdate)) as bpchar) as c14, 
  ref_0.l_suppkey as c15, 
  ref_0.l_comment as c16, 
  86 as c17, 
  ref_0.l_partkey as c18, 
  ref_0.l_discount as c19, 
  ref_0.l_quantity as c20, 
  ref_0.l_commitdate as c21
from 
  public.lineitem as ref_0
where (cast(null as int8) = pg_catalog.pg_stat_get_xact_blocks_fetched(
      cast(cast(nullif(case when (EXISTS (
              select  
                  ref_1.ps_supplycost as c0, 
                  ref_1.ps_partkey as c1, 
                  ref_1.ps_null as c2, 
                  ref_0.l_extendedprice as c3, 
                  75 as c4, 
                  ref_0.l_discount as c5, 
                  ref_1.ps_suppkey as c6
                from 
                  public.partsupp as ref_1
                where (cast(null as "timestamp") <> cast(null as timestamptz)) 
                  and (false)
                limit 100)) 
            and ((ref_0.l_shipinstruct is NULL) 
              or (cast(null as "char") <> cast(null as "char"))) then cast(coalesce(cast(null as oid),
            cast(null as oid)) as oid) else cast(coalesce(cast(null as oid),
            cast(null as oid)) as oid) end
          ,
        pg_catalog.oidlarger(
          cast(cast(null as oid) as oid),
          cast(cast(null as oid) as oid))) as oid) as oid))) 
  or (ref_0.l_receiptdate is not NULL);
select  
  ref_0.p_name as c0, 
  ref_0.p_retailprice as c1, 
  ref_0.p_null as c2, 
  
    pg_catalog.stddev(
      cast(pg_catalog.int8inc_any(
        cast(cast(null as int8) as int8),
        cast(case when false then cast(coalesce(cast(null as "any"),
            cast(null as "any")) as "any") else cast(coalesce(cast(null as "any"),
            cast(null as "any")) as "any") end
           as "any")) as int8)) over (partition by ref_0.p_comment order by ref_0.p_brand) as c3, 
  ref_0.p_retailprice as c4, 
  ref_0.p_container as c5, 
  ref_0.p_comment as c6, 
  ref_0.p_brand as c7, 
  case when EXISTS (
      select  
          sample_0.r_name as c0, 
          37 as c1
        from 
          public.region as sample_0 tablesample system (8.8) 
        where case when (ref_0.p_name is NULL) 
              or (cast(null as bytea) !~~ cast(null as bytea)) then cast(null as anyarray) else cast(null as anyarray) end
             <@ cast(null as anyarray)
        limit 84) then ref_0.p_container else ref_0.p_container end
     as c8, 
  ref_0.p_container as c9, 
  ref_0.p_type as c10, 
  
    pg_catalog.max(
      cast(pg_catalog.pg_export_snapshot() as text)) over (partition by ref_0.p_comment order by ref_0.p_mfgr) as c11, 
  ref_0.p_brand as c12
from 
  public.part as ref_0
where ref_0.p_partkey is not NULL;
select  
  ref_0.l_shipmode as c0, 
  ref_0.l_returnflag as c1, 
  subq_1.c9 as c2, 
  ref_0.l_shipdate as c3, 
  subq_1.c13 as c4, 
  case when cast(null as tsvector) <> case when ((cast(null as "char") <= cast(null as "char")) 
            and (false > false)) 
          or ((false) 
            and (EXISTS (
              select  
                  ref_0.l_discount as c0, 
                  subq_1.c10 as c1, 
                  subq_1.c3 as c2, 
                  subq_1.c6 as c3
                from 
                  public.lineitem as ref_2
                where ((cast(null as tsquery) <@ cast(null as tsquery)) 
                    and (true)) 
                  or (cast(null as int8) < cast(null as int8))
                limit 161))) then cast(null as tsvector) else cast(null as tsvector) end
         then pg_catalog.oidlarger(
      cast(pg_catalog.pg_my_temp_schema() as oid),
      cast(pg_catalog.lo_create(
        cast(pg_catalog.lo_import(
          cast(cast(null as text) as text),
          cast(case when cast(null as text) ~~* cast(null as text) then cast(null as oid) else cast(null as oid) end
             as oid)) as oid)) as oid)) else pg_catalog.oidlarger(
      cast(pg_catalog.pg_my_temp_schema() as oid),
      cast(pg_catalog.lo_create(
        cast(pg_catalog.lo_import(
          cast(cast(null as text) as text),
          cast(case when cast(null as text) ~~* cast(null as text) then cast(null as oid) else cast(null as oid) end
             as oid)) as oid)) as oid)) end
     as c5, 
  case when subq_1.c3 is not NULL then ref_0.l_linestatus else ref_0.l_linestatus end
     as c6, 
  pg_catalog.anyrange_out(
    cast(pg_catalog.daterange(
      cast(subq_1.c13 as date),
      cast(ref_0.l_shipdate as date)) as anyrange)) as c7, 
  subq_1.c1 as c8, 
  ref_0.l_comment as c9, 
  cast(coalesce(subq_1.c14,
    
      pg_catalog.avg(
        cast(case when cast(null as circle) << cast(null as circle) then cast(null as int8) else cast(null as int8) end
           as int8)) over (partition by ref_0.l_linenumber,subq_1.c10 order by subq_1.c7)) as "numeric") as c10
from 
  public.lineitem as ref_0,
  lateral (select  
        subq_0.c0 as c0, 
        72 as c1, 
        ref_0.l_suppkey as c2, 
        ref_0.l_shipinstruct as c3, 
        (select pg_catalog.jsonb_agg(o_orderkey) from public.orders)
           as c4, 
        ref_0.l_shipmode as c5, 
        subq_0.c0 as c6, 
        ref_0.l_shipinstruct as c7, 
        ref_0.l_orderkey as c8, 
        subq_0.c0 as c9, 
        subq_0.c0 as c10, 
        17 as c11, 
        ref_0.l_tax as c12, 
        ref_0.l_receiptdate as c13, 
        ref_0.l_quantity as c14
      from 
        (select  
              ref_0.l_shipinstruct as c0
            from 
              public.nation as ref_1
            where cast(null as text) = cast(null as text)) as subq_0
      where cast(null as circle) < cast(null as circle)
      limit 141) as subq_1
where (case when (cast(nullif(cast(null as money),
            cast(null as money)) as money) < pg_catalog.cash_mul_flt4(
            cast(cast(null as money) as money),
            cast(cast(null as float4) as float4))) 
        or (cast(null as int2) >= pg_catalog.int8in(
            cast(cast(null as cstring) as cstring))) then case when false then cast(coalesce(cast(nullif(cast(null as record),
            cast(null as record)) as record),
          cast(null as record)) as record) else cast(coalesce(cast(nullif(cast(null as record),
            cast(null as record)) as record),
          cast(null as record)) as record) end
         else case when false then cast(coalesce(cast(nullif(cast(null as record),
            cast(null as record)) as record),
          cast(null as record)) as record) else cast(coalesce(cast(nullif(cast(null as record),
            cast(null as record)) as record),
          cast(null as record)) as record) end
         end
       *>= case when ref_0.l_orderkey >= ref_0.l_partkey then cast(null as record) else cast(null as record) end
      ) 
  and (EXISTS (
    select  
        subq_1.c13 as c0
      from 
        public.supplier as sample_1 tablesample system (0.4) 
      where EXISTS (
        select  
            sample_1.s_phone as c0, 
            sample_1.s_null as c1, 
            ref_0.l_discount as c2, 
            subq_1.c0 as c3, 
            (select n_null from public.nation limit 1 offset 4)
               as c4, 
            subq_1.c10 as c5, 
            ref_0.l_shipdate as c6, 
            subq_1.c10 as c7, 
            sample_2.p_partkey as c8, 
            62 as c9, 
            ref_0.l_shipdate as c10
          from 
            public.part as sample_2 tablesample system (5.2) 
          where true)));
select  
  subq_0.c2 as c0
from 
  public.lineitem as ref_0
    inner join (select  
          sample_0.o_orderdate as c0, 
          72 as c1, 
          sample_0.o_null as c2
        from 
          public.orders as sample_0 tablesample system (7.5) 
        where (true) 
          or ((cast(null as circle) = cast(null as circle)) 
            and ((cast(null as timestamptz) = sample_0.o_orderdate) 
              and ((cast(null as inet) << cast(null as inet)) 
                and (false))))
        limit 77) as subq_0
    on (ref_0.l_null is NULL)
where EXISTS (
  select  
      pg_catalog.pg_stat_get_checkpoint_write_time() as c0, 
      subq_0.c0 as c1, 
      ref_0.l_shipdate as c2, 
      subq_0.c0 as c3, 
      subq_1.c0 as c4, 
      pg_catalog.current_query() as c5
    from 
      (select  
              sample_1.p_retailprice as c0
            from 
              public.part as sample_1 tablesample system (7.2) 
            where ref_0.l_quantity is NULL) as subq_1
        inner join (select  
              subq_0.c1 as c0
            from 
              public.nation as sample_2 tablesample system (2.6) 
            where EXISTS (
              select  
                  sample_2.n_name as c0
                from 
                  public.customer as sample_3 tablesample system (0.8) 
                where cast(null as anyrange) -|- cast(null as anyrange))
            limit 61) as subq_2
        on (true)
    where pg_catalog.pg_last_xact_replay_timestamp() <> pg_catalog.pg_stat_get_last_autoanalyze_time(
        cast(cast(null as oid) as oid))
    limit 134);
update public.lineitem set 
  l_partkey = public.lineitem.l_linenumber, 
  l_linenumber = (select pg_catalog.min(o_orderkey) from public.orders)
    , 
  l_quantity = case when cast(null as point) <@ case when true then cast(nullif(cast(null as lseg),
          case when cast(null as tsquery) @@ cast(null as tsvector) then cast(null as lseg) else cast(null as lseg) end
            ) as lseg) else cast(nullif(cast(null as lseg),
          case when cast(null as tsquery) @@ cast(null as tsvector) then cast(null as lseg) else cast(null as lseg) end
            ) as lseg) end
         then public.lineitem.l_quantity else public.lineitem.l_quantity end
    , 
  l_linestatus = public.lineitem.l_returnflag, 
  l_receiptdate = public.lineitem.l_receiptdate, 
  l_shipinstruct = (select pg_catalog.min(p_mfgr) from public.part)
    , 
  l_comment = cast(coalesce(case when (cast(null as name) <= pg_catalog.current_database()) 
        or (case when cast(null as record) > cast(null as record) then cast(null as reltime) else cast(null as reltime) end
             < case when (cast(null as circle) |&> cast(null as circle)) 
              and (public.lineitem.l_suppkey is not NULL) then cast(null as reltime) else cast(null as reltime) end
            ) then public.lineitem.l_comment else public.lineitem.l_comment end
      ,
    public.lineitem.l_null) as "varchar")
returning 
  public.lineitem.l_quantity as c0;
select  
  (select n_name from public.nation limit 1 offset 3)
     as c0, 
  pg_catalog.lowrite(
    cast(subq_0.c3 as int4),
    cast(cast(nullif(cast(null as bytea),
      case when subq_0.c2 is not NULL then pg_catalog.regdictionarysend(
          cast(cast(coalesce(cast(null as regdictionary),
            cast(null as regdictionary)) as regdictionary) as regdictionary)) else pg_catalog.regdictionarysend(
          cast(cast(coalesce(cast(null as regdictionary),
            cast(null as regdictionary)) as regdictionary) as regdictionary)) end
        ) as bytea) as bytea)) as c1, 
  pg_catalog.pg_my_temp_schema() as c2, 
  subq_0.c4 as c3
from 
  (select  
        ref_0.l_linestatus as c0, 
        sample_0.n_regionkey as c1, 
        ref_0.l_receiptdate as c2, 
        sample_0.n_nationkey as c3, 
        ref_0.l_quantity as c4, 
        (select r_regionkey from public.region limit 1 offset 65)
           as c5, 
        sample_0.n_regionkey as c6
      from 
        public.lineitem as ref_0
          right join public.nation as sample_0 tablesample bernoulli (5.7) 
          on (ref_0.l_returnflag = sample_0.n_name )
      where (ref_0.l_returnflag is NULL) 
        and ((select pg_catalog.jsonb_agg(n_nationkey) from public.nation)
             @> case when ref_0.l_linenumber is not NULL then cast(null as jsonb) else cast(null as jsonb) end
            )) as subq_0
where cast(coalesce(cast(null as jsonb),
    cast(coalesce(pg_catalog.jsonb_build_array(),
      cast(coalesce(pg_catalog.jsonb_build_array(),
        case when (((EXISTS (
                  select  
                      ref_1.r_regionkey as c0, 
                      (select o_clerk from public.orders limit 1 offset 3)
                         as c1
                    from 
                      public.region as ref_1
                    where (select s_null from public.supplier limit 1 offset 4)
                         is not NULL)) 
                and (false)) 
              or (cast(null as float8) <= cast(null as float4))) 
            or (cast(null as float4) < cast(null as float4)) then (select pg_catalog.jsonb_agg(r_regionkey) from public.region)
             else (select pg_catalog.jsonb_agg(r_regionkey) from public.region)
             end
          ) as jsonb)) as jsonb)) as jsonb) ?& case when cast(null as timestamptz) < subq_0.c2 then cast(coalesce(case when cast(null as "timestamp") = cast(null as "timestamp") then cast(null as _text) else cast(null as _text) end
        ,
      case when cast(null as int8) <> (select pg_catalog.min(s_suppkey) from public.supplier)
             then pg_catalog.string_to_array(
          cast(pg_catalog.pg_export_snapshot() as text),
          cast(pg_catalog.split_part(
            cast(cast(null as text) as text),
            cast(cast(null as text) as text),
            cast(subq_0.c3 as int4)) as text)) else pg_catalog.string_to_array(
          cast(pg_catalog.pg_export_snapshot() as text),
          cast(pg_catalog.split_part(
            cast(cast(null as text) as text),
            cast(cast(null as text) as text),
            cast(subq_0.c3 as int4)) as text)) end
        ) as _text) else cast(coalesce(case when cast(null as "timestamp") = cast(null as "timestamp") then cast(null as _text) else cast(null as _text) end
        ,
      case when cast(null as int8) <> (select pg_catalog.min(s_suppkey) from public.supplier)
             then pg_catalog.string_to_array(
          cast(pg_catalog.pg_export_snapshot() as text),
          cast(pg_catalog.split_part(
            cast(cast(null as text) as text),
            cast(cast(null as text) as text),
            cast(subq_0.c3 as int4)) as text)) else pg_catalog.string_to_array(
          cast(pg_catalog.pg_export_snapshot() as text),
          cast(pg_catalog.split_part(
            cast(cast(null as text) as text),
            cast(cast(null as text) as text),
            cast(subq_0.c3 as int4)) as text)) end
        ) as _text) end
    ;
select  
  subq_2.c9 as c0, 
  subq_1.c1 as c1, 
  subq_1.c0 as c2, 
  
    pg_catalog.max(
      cast(subq_2.c8 as date)) over (partition by subq_2.c4 order by subq_2.c5) as c3, 
  (select n_comment from public.nation limit 1 offset 6)
     as c4
from 
  (select  
        ref_0.l_orderkey as c0, 
        subq_0.c2 as c1, 
        subq_0.c0 as c2
      from 
        public.lineitem as ref_0
          inner join (select  
                ref_1.l_receiptdate as c0, 
                ref_1.l_comment as c1, 
                ref_1.l_linenumber as c2
              from 
                public.lineitem as ref_1
              where ref_1.l_comment is not NULL
              limit 23) as subq_0
          on ((cast(null as anyarray) @> cast(null as anyarray)) 
              or (true))
      where ((cast(null as point) <@ cast(null as circle)) 
          or (ref_0.l_linestatus is NULL)) 
        and (subq_0.c0 is NULL)
      limit 103) as subq_1,
  lateral (select  
        subq_1.c1 as c0, 
        sample_0.r_null as c1, 
        subq_1.c2 as c2, 
        sample_0.r_comment as c3, 
        subq_1.c1 as c4, 
        case when EXISTS (
            select  
                (select ps_supplycost from public.partsupp limit 1 offset 2)
                   as c0, 
                sample_1.s_suppkey as c1, 
                sample_1.s_nationkey as c2, 
                (select l_linestatus from public.lineitem limit 1 offset 6)
                   as c3
              from 
                public.supplier as sample_1 tablesample bernoulli (9.2) 
              where subq_1.c0 is not NULL) then sample_0.r_name else sample_0.r_name end
           as c5, 
        subq_1.c1 as c6, 
        subq_1.c0 as c7, 
        subq_1.c2 as c8, 
        pg_catalog.bpcharicregexne(
          cast(sample_0.r_name as bpchar),
          cast(cast(null as text) as text)) as c9, 
        subq_1.c1 as c10
      from 
        public.region as sample_0 tablesample system (0.3) 
      where cast(coalesce(subq_1.c2,
          subq_1.c2) as date) is not NULL) as subq_2
where true
limit 90;
